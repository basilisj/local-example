2021-08-02 00:43:43 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 00:43:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 00:43:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 00:43:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 00:43:43 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 00:43:43 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 00:43:44 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 00:43:44 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 00:43:44 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 00:43:44 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 00:43:44 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 00:43:44 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 00:43:44 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 00:43:44 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 00:43:44 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 00:43:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 00:43:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 00:43:45 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 00:43:45 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 00:43:45 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 00:43:45 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 00:43:45 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 00:43:45 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 00:43:47 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 00:43:47 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 00:43:47 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 00:43:47 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 00:43:47 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 00:43:53 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 00:43:53 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 00:43:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 00:43:53 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 00:43:53 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 00:43:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:43:53 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 00:43:53 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 00:43:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property email
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property password
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property username
2021-08-02 00:43:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:43:53 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 00:43:53 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 00:43:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 00:43:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 00:43:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:43:53 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 00:43:53 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 00:43:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property des
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property status
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property type
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 00:43:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:43:53 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 00:43:53 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 00:43:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 00:43:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 00:43:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:43:53 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 00:43:53 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 00:43:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 00:43:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 00:43:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 00:43:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 00:43:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 00:43:53 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 00:43:53 DEBUG PropertyBinder:266 - Building property status
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 00:43:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 00:43:53 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 00:43:53 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 00:43:53 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 00:43:53 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 00:43:53 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 00:43:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 00:43:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 00:43:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 00:43:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 00:43:53 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 00:43:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 00:43:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 00:43:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 00:43:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 00:43:53 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 00:43:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 00:43:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 00:43:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 00:43:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 00:43:53 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 00:43:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 00:43:53 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 00:43:53 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 00:43:53 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 00:43:53 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 00:43:53 DEBUG Settings:74 - Statistics: disabled
2021-08-02 00:43:53 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 00:43:53 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 00:43:53 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 00:43:53 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 00:43:53 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 00:43:53 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 00:43:53 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 00:43:53 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 00:43:53 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 00:43:53 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 00:43:53 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 00:43:53 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 00:43:53 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 00:43:53 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 00:43:53 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 00:43:53 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 00:43:53 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 00:43:53 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 00:43:53 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 00:43:53 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 00:43:53 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 00:43:53 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 00:43:53 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 00:43:53 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 00:43:53 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 00:43:53 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 00:43:53 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 00:43:53 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 00:43:53 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 00:43:53 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 00:43:53 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 00:43:53 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 00:43:53 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 00:43:53 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 00:43:54 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 00:43:54 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 00:43:54 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 00:43:54 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 00:43:54 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 00:43:54 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 00:43:54 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 00:43:54 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 00:43:54 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 00:43:54 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 00:43:54 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 00:43:54 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 00:43:54 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 00:43:54 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 00:43:54 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 00:43:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 00:43:54 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 00:43:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 00:43:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 00:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 00:43:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 00:43:55 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 00:43:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 00:43:55 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 00:43:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 00:43:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 00:43:56 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 00:43:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 00:43:56 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 00:43:56 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:43:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 00:43:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:43:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:43:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:43:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 00:43:56 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 00:43:56 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 00:43:56 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 00:43:56 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 00:43:56 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 00:43:56 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 00:43:56 DEBUG Table:516 - No alter strings for table : users
2021-08-02 00:43:57 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 00:43:57 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 00:43:57 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 00:43:57 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 00:43:57 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 00:43:57 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 00:43:57 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 00:43:57 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: b630708f-560b-406a-bc92-7744a32a8674 (<unnamed>)
2021-08-02 00:43:57 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 00:43:57 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 00:43:57 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 00:43:57 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=username
2021-08-02 00:43:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 00:43:57 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'username'

2021-08-02 00:43:57 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 00:43:57 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 00:43:57 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 00:43:57 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:43:57 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 00:43:57 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 00:43:57 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:43:57 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 00:43:57 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 00:43:57 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ( users0_.username {synthetic-alias} username ) ) ) )
2021-08-02 00:43:57 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 00:43:57 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 00:43:57 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 00:43:57 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'username' {originalText=username}

2021-08-02 00:43:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 00:43:57 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=username
2021-08-02 00:43:57 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=users0_.username
2021-08-02 00:43:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 00:44:42 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 00:44:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 00:44:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 00:44:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 00:44:43 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 00:44:43 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 00:44:43 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 00:44:43 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 00:44:43 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 00:44:44 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 00:44:44 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 00:44:44 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 00:44:44 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 00:44:44 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 00:44:44 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 00:44:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 00:44:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 00:44:44 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 00:44:44 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 00:44:44 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 00:44:44 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 00:44:45 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 00:44:45 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 00:44:46 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 00:44:46 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 00:44:46 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 00:44:46 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 00:44:46 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 00:44:52 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 00:44:52 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 00:44:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 00:44:52 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 00:44:52 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 00:44:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 00:44:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:44:52 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 00:44:52 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 00:44:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 00:44:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 00:44:52 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 00:44:52 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 00:44:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 00:44:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 00:44:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 00:44:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 00:44:52 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property email
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property password
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property username
2021-08-02 00:44:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:44:53 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 00:44:53 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 00:44:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 00:44:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 00:44:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:44:53 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 00:44:53 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 00:44:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property des
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property status
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property type
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 00:44:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:44:53 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 00:44:53 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 00:44:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 00:44:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 00:44:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 00:44:53 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 00:44:53 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 00:44:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 00:44:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 00:44:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 00:44:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 00:44:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 00:44:53 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 00:44:53 DEBUG PropertyBinder:266 - Building property status
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 00:44:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 00:44:53 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 00:44:53 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 00:44:53 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 00:44:53 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 00:44:53 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 00:44:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 00:44:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 00:44:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 00:44:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 00:44:53 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 00:44:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 00:44:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 00:44:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 00:44:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 00:44:53 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 00:44:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 00:44:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 00:44:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 00:44:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 00:44:53 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 00:44:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 00:44:53 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 00:44:53 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 00:44:53 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 00:44:53 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 00:44:53 DEBUG Settings:74 - Statistics: disabled
2021-08-02 00:44:53 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 00:44:53 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 00:44:53 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 00:44:53 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 00:44:53 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 00:44:53 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 00:44:53 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 00:44:53 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 00:44:53 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 00:44:53 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 00:44:53 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 00:44:53 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 00:44:53 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 00:44:53 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 00:44:53 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 00:44:53 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 00:44:53 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 00:44:53 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 00:44:53 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 00:44:53 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 00:44:53 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 00:44:53 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 00:44:53 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 00:44:53 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 00:44:53 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 00:44:53 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 00:44:53 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 00:44:53 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 00:44:53 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 00:44:53 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 00:44:53 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 00:44:53 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 00:44:53 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 00:44:53 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 00:44:53 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 00:44:53 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 00:44:53 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 00:44:53 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 00:44:53 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 00:44:53 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 00:44:53 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 00:44:53 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 00:44:53 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 00:44:53 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 00:44:53 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 00:44:53 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 00:44:53 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 00:44:53 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 00:44:53 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 00:44:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 00:44:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 00:44:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 00:44:54 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 00:44:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 00:44:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 00:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 00:44:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 00:44:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 00:44:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 00:44:55 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 00:44:55 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 00:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 00:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 00:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 00:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 00:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 00:44:55 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 00:44:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 00:44:55 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 00:44:55 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 00:44:55 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 00:44:55 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 00:44:55 DEBUG Table:516 - No alter strings for table : users
2021-08-02 00:44:56 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 00:44:56 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 00:44:56 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 00:44:56 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 00:44:56 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 00:44:56 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 00:44:56 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 00:44:56 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 08f81a86-0cbc-4dda-a859-b4f8dc0a4a4c (<unnamed>)
2021-08-02 00:44:56 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 00:44:56 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 00:44:56 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 00:44:56 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=username
2021-08-02 00:44:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 00:44:56 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'username'

2021-08-02 00:44:56 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 00:44:56 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 00:44:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 00:44:56 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:44:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 00:44:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 00:44:56 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 00:44:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 00:44:56 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 00:44:56 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ( users0_.username {synthetic-alias} username ) ) ) )
2021-08-02 00:44:57 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 00:44:57 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 00:44:57 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 00:44:57 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'username' {originalText=username}

2021-08-02 00:44:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 00:44:57 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=username
2021-08-02 00:44:57 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=users0_.username
2021-08-02 00:44:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:36:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 12:36:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 12:36:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 12:36:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 12:36:58 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 12:36:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 12:36:58 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 12:36:58 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 12:36:58 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 12:36:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 12:36:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 12:36:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 12:36:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 12:36:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 12:36:58 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 12:36:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:36:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 12:36:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 12:36:59 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 12:36:59 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 12:36:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 12:36:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 12:36:59 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 12:37:01 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 12:37:01 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 12:37:01 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 12:37:01 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 12:37:01 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 12:37:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 12:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:37:08 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:37:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 12:37:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:37:08 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 12:37:08 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 12:37:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property email
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property password
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property username
2021-08-02 12:37:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:37:08 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 12:37:08 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 12:37:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:37:08 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 12:37:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:37:08 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 12:37:08 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 12:37:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property des
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property type
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 12:37:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:37:08 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 12:37:08 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 12:37:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:37:08 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 12:37:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:37:08 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 12:37:08 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 12:37:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:37:08 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 12:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 12:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 12:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 12:37:08 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 12:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 12:37:08 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 12:37:08 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 12:37:08 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 12:37:08 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 12:37:08 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 12:37:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 12:37:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 12:37:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 12:37:08 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 12:37:08 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 12:37:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:37:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 12:37:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 12:37:08 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 12:37:08 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:37:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:37:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 12:37:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 12:37:08 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 12:37:08 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:37:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:37:09 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 12:37:09 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 12:37:09 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 12:37:09 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 12:37:09 DEBUG Settings:74 - Statistics: disabled
2021-08-02 12:37:09 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 12:37:09 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 12:37:09 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 12:37:09 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 12:37:09 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 12:37:09 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 12:37:09 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 12:37:09 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 12:37:09 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 12:37:09 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 12:37:09 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 12:37:09 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 12:37:09 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 12:37:09 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 12:37:09 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 12:37:09 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 12:37:09 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 12:37:09 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 12:37:09 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 12:37:09 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 12:37:09 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 12:37:09 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 12:37:09 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 12:37:09 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 12:37:09 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 12:37:09 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 12:37:09 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 12:37:09 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 12:37:09 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 12:37:09 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 12:37:09 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 12:37:09 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 12:37:09 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 12:37:09 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 12:37:09 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 12:37:09 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 12:37:09 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 12:37:09 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 12:37:09 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 12:37:09 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 12:37:09 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 12:37:09 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 12:37:09 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 12:37:09 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 12:37:09 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 12:37:09 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 12:37:09 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 12:37:09 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 12:37:09 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 12:37:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:37:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:37:10 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 12:37:10 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 12:37:10 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:37:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 12:37:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 12:37:10 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 12:37:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:37:10 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 12:37:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 12:37:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:37:11 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:37:11 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 12:37:11 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:37:11 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:37:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 12:37:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:37:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:37:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:37:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:37:11 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 12:37:11 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 12:37:11 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 12:37:11 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 12:37:11 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 12:37:11 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 12:37:11 DEBUG Table:516 - No alter strings for table : users
2021-08-02 12:37:12 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 12:37:12 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 12:37:12 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:37:12 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:37:12 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 12:37:12 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 12:37:12 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 12:37:12 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9d82920f-df19-4733-a364-6eea123d540e (<unnamed>)
2021-08-02 12:37:12 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 12:37:12 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 12:37:12 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 12:37:12 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=username
2021-08-02 12:37:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:37:12 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'username'

2021-08-02 12:37:12 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 12:37:12 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 12:37:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 12:37:12 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:37:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 12:37:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 12:37:12 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:37:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 12:37:12 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 12:37:12 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ( users0_.username {synthetic-alias} username ) ) ) )
2021-08-02 12:37:12 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 12:37:12 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 12:37:12 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 12:37:12 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'username' {originalText=username}

2021-08-02 12:37:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:37:12 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=username
2021-08-02 12:37:12 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=users0_.username
2021-08-02 12:37:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:41:22 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 12:41:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 12:41:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 12:41:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 12:41:23 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 12:41:23 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 12:41:23 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 12:41:23 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 12:41:23 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 12:41:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 12:41:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 12:41:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 12:41:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 12:41:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 12:41:23 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 12:41:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:41:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 12:41:24 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 12:41:24 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 12:41:24 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 12:41:24 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 12:41:24 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 12:41:24 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 12:41:26 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 12:41:26 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 12:41:26 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 12:41:26 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 12:41:26 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 12:41:32 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 12:41:32 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:41:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:41:32 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:41:32 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 12:41:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:41:32 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 12:41:32 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 12:41:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property email
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property password
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property username
2021-08-02 12:41:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:41:32 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 12:41:32 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 12:41:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:41:32 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 12:41:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:41:32 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 12:41:32 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 12:41:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property des
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property type
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 12:41:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:41:32 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 12:41:32 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 12:41:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:41:32 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 12:41:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:41:32 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 12:41:32 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 12:41:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:41:32 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 12:41:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:41:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 12:41:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 12:41:32 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 12:41:32 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 12:41:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 12:41:33 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 12:41:33 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 12:41:33 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 12:41:33 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 12:41:33 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 12:41:33 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 12:41:33 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 12:41:33 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 12:41:33 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 12:41:33 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 12:41:33 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:41:33 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 12:41:33 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 12:41:33 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 12:41:33 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:41:33 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:41:33 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 12:41:33 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 12:41:33 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 12:41:33 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:41:33 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:41:33 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 12:41:33 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 12:41:33 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 12:41:33 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 12:41:33 DEBUG Settings:74 - Statistics: disabled
2021-08-02 12:41:33 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 12:41:33 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 12:41:33 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 12:41:33 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 12:41:33 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 12:41:33 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 12:41:33 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 12:41:33 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 12:41:33 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 12:41:33 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 12:41:33 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 12:41:33 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 12:41:33 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 12:41:33 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 12:41:33 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 12:41:33 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 12:41:33 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 12:41:33 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 12:41:33 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 12:41:33 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 12:41:33 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 12:41:33 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 12:41:33 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 12:41:33 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 12:41:33 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 12:41:33 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 12:41:33 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 12:41:33 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 12:41:33 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 12:41:33 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 12:41:33 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 12:41:33 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 12:41:33 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 12:41:33 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 12:41:33 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 12:41:33 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 12:41:33 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 12:41:33 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 12:41:33 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 12:41:33 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 12:41:33 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 12:41:33 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 12:41:33 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 12:41:33 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 12:41:33 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 12:41:33 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 12:41:33 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 12:41:33 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 12:41:33 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:41:33 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 12:41:33 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 12:41:33 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:41:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:41:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 12:41:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:41:34 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:41:34 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 12:41:34 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:41:34 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:41:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 12:41:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:41:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:41:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:41:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:41:34 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 12:41:34 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 12:41:34 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 12:41:34 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 12:41:34 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 12:41:34 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 12:41:34 DEBUG Table:516 - No alter strings for table : users
2021-08-02 12:41:35 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 12:41:35 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 12:41:35 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:41:35 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:41:35 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 12:41:35 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 12:41:35 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 12:41:35 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1d5623cc-cbea-49d8-9d3b-50ba95b7b2a1 (<unnamed>)
2021-08-02 12:41:35 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 12:41:35 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 12:41:35 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 12:41:36 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=username
2021-08-02 12:41:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:41:36 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'username'

2021-08-02 12:41:36 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 12:41:36 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 12:41:36 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 12:41:36 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:41:36 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 12:41:36 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 12:41:36 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:41:36 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 12:41:36 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 12:41:36 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ( users0_.username {synthetic-alias} username ) ) ) )
2021-08-02 12:41:36 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 12:41:36 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 12:41:36 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 12:41:36 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'username' {originalText=username}

2021-08-02 12:41:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:41:36 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=username
2021-08-02 12:41:36 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=users0_.username
2021-08-02 12:41:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:42:36 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 12:42:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 12:42:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 12:42:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 12:42:36 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 12:42:36 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 12:42:37 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 12:42:37 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 12:42:37 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 12:42:37 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 12:42:37 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 12:42:37 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 12:42:37 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 12:42:37 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 12:42:37 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 12:42:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:42:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 12:42:38 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 12:42:38 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 12:42:38 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 12:42:38 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 12:42:38 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 12:42:38 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 12:42:39 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 12:42:39 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 12:42:39 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 12:42:39 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 12:42:39 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 12:42:45 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 12:42:45 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:42:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:42:45 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:42:45 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 12:42:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:42:45 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 12:42:45 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 12:42:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property email
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property password
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property username
2021-08-02 12:42:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:42:45 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 12:42:45 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 12:42:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:42:45 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 12:42:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:42:45 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 12:42:45 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 12:42:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property des
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property type
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 12:42:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:42:45 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 12:42:45 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 12:42:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:42:45 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 12:42:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:42:45 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 12:42:45 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 12:42:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:42:45 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 12:42:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:42:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 12:42:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 12:42:45 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 12:42:45 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 12:42:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 12:42:45 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 12:42:45 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 12:42:45 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 12:42:45 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 12:42:45 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 12:42:45 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 12:42:45 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 12:42:45 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 12:42:45 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 12:42:45 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 12:42:45 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:42:45 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 12:42:45 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 12:42:45 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 12:42:45 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:42:45 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:42:45 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 12:42:45 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 12:42:45 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 12:42:45 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:42:45 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:42:45 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 12:42:45 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 12:42:45 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 12:42:45 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 12:42:45 DEBUG Settings:74 - Statistics: disabled
2021-08-02 12:42:45 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 12:42:45 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 12:42:45 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 12:42:45 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 12:42:45 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 12:42:45 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 12:42:45 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 12:42:45 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 12:42:45 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 12:42:45 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 12:42:45 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 12:42:45 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 12:42:45 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 12:42:45 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 12:42:45 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 12:42:45 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 12:42:45 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 12:42:45 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 12:42:45 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 12:42:45 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 12:42:45 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 12:42:45 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 12:42:45 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 12:42:45 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 12:42:45 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 12:42:45 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 12:42:45 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 12:42:45 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 12:42:45 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 12:42:45 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 12:42:45 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 12:42:45 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 12:42:45 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 12:42:45 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 12:42:46 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 12:42:46 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 12:42:46 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 12:42:46 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 12:42:46 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 12:42:46 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 12:42:46 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 12:42:46 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 12:42:46 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 12:42:46 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 12:42:46 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 12:42:46 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 12:42:46 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 12:42:46 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 12:42:46 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:42:46 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 12:42:46 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 12:42:46 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:42:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:42:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 12:42:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:42:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:42:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 12:42:47 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:42:47 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:42:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 12:42:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:42:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:42:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:42:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:42:47 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 12:42:47 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 12:42:47 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 12:42:47 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 12:42:47 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 12:42:47 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 12:42:47 DEBUG Table:516 - No alter strings for table : users
2021-08-02 12:42:48 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 12:42:48 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 12:42:48 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:42:48 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:42:48 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 12:42:48 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 12:42:48 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 12:42:48 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 92891cde-7f8a-4103-871b-da0e68b61a9e (<unnamed>)
2021-08-02 12:42:48 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 12:42:48 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 12:42:48 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 12:42:48 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from users where username=username
2021-08-02 12:42:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:42:48 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[IDENT] Node: 'users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'username'

2021-08-02 12:42:48 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 12:42:48 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-08-02 12:46:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 12:46:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 12:46:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 12:46:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 12:46:51 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 12:46:51 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 12:46:51 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 12:46:51 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 12:46:51 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 12:46:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 12:46:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 12:46:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 12:46:52 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 12:46:52 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 12:46:52 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 12:46:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:46:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 12:46:52 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 12:46:52 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 12:46:52 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 12:46:52 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 12:46:52 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 12:46:52 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 12:46:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 12:46:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 12:46:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 12:46:54 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 12:46:54 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 12:47:00 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 12:47:00 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:47:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:47:00 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:47:00 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 12:47:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:47:01 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 12:47:01 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 12:47:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property email
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property password
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property username
2021-08-02 12:47:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:47:01 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 12:47:01 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 12:47:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:47:01 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 12:47:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:47:01 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 12:47:01 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 12:47:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property des
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property type
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 12:47:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:47:01 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 12:47:01 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 12:47:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:47:01 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 12:47:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:47:01 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 12:47:01 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 12:47:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:47:01 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 12:47:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:47:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 12:47:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 12:47:01 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 12:47:01 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 12:47:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 12:47:01 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 12:47:01 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 12:47:01 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 12:47:01 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 12:47:01 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 12:47:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 12:47:01 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 12:47:01 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 12:47:01 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 12:47:01 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 12:47:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:47:01 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 12:47:01 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 12:47:01 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 12:47:01 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:47:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:47:01 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 12:47:01 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 12:47:01 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 12:47:01 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:47:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:47:01 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 12:47:01 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 12:47:01 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 12:47:01 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 12:47:01 DEBUG Settings:74 - Statistics: disabled
2021-08-02 12:47:01 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 12:47:01 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 12:47:01 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 12:47:01 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 12:47:01 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 12:47:01 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 12:47:01 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 12:47:01 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 12:47:01 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 12:47:01 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 12:47:01 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 12:47:01 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 12:47:01 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 12:47:01 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 12:47:01 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 12:47:01 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 12:47:01 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 12:47:01 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 12:47:01 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 12:47:01 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 12:47:01 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 12:47:01 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 12:47:01 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 12:47:01 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 12:47:01 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 12:47:01 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 12:47:01 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 12:47:01 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 12:47:01 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 12:47:01 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 12:47:01 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 12:47:01 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 12:47:01 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 12:47:01 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 12:47:01 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 12:47:01 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 12:47:01 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 12:47:01 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 12:47:01 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 12:47:01 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 12:47:01 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 12:47:01 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 12:47:01 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 12:47:01 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 12:47:01 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 12:47:01 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 12:47:01 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 12:47:01 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 12:47:01 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 12:47:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:47:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:47:02 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 12:47:02 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 12:47:02 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:47:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 12:47:02 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 12:47:02 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 12:47:02 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:47:02 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 12:47:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 12:47:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:47:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:47:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 12:47:03 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:47:03 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:47:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 12:47:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:47:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:47:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:47:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:47:03 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 12:47:03 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 12:47:03 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 12:47:03 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 12:47:03 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 12:47:03 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 12:47:03 DEBUG Table:516 - No alter strings for table : users
2021-08-02 12:47:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 12:47:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 12:47:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:47:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:47:04 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 12:47:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 12:47:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 12:47:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9f8ba91e-6e81-4729-ac6a-3308c6eefa64 (<unnamed>)
2021-08-02 12:47:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 12:47:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 12:47:04 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 12:47:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 12:47:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:47:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 12:47:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 12:47:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 12:47:04 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 12:47:04 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:47:04 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 12:47:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 12:47:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 12:47:04 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 12:47:04 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 12:47:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 12:47:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 12:47:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:47:04 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 12:47:04 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 12:47:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:47:04 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 12:47:04 DEBUG Loader:384 - Result set row: 0
2021-08-02 12:47:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 12:47:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 12:47:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 12:47:04 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 12:47:04 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 12:47:04 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 12:47:04 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 12:47:04 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 12:47:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 12:47:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 12:47:04 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 12:47:04 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 12:47:04 INFO  Logging:46 - User was logged in
2021-08-02 12:53:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 12:53:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 12:53:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 12:53:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 12:53:50 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 12:53:50 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 12:53:50 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 12:53:50 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 12:53:50 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 12:53:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 12:53:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 12:53:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 12:53:51 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 12:53:51 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 12:53:51 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 12:53:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:53:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 12:53:52 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 12:53:52 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 12:53:52 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 12:53:52 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 12:53:52 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 12:53:52 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 12:53:53 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 12:53:53 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 12:53:53 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 12:53:54 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 12:53:54 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 12:54:01 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 12:54:01 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:54:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:54:01 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:54:01 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 12:54:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:54:01 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 12:54:01 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 12:54:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property email
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property password
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property username
2021-08-02 12:54:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:54:01 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 12:54:01 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 12:54:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:54:01 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 12:54:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:54:01 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 12:54:01 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 12:54:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property des
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property type
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 12:54:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:54:01 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 12:54:01 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 12:54:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:54:01 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 12:54:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:54:01 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 12:54:01 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 12:54:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:54:01 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 12:54:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:54:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 12:54:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 12:54:01 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 12:54:01 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 12:54:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 12:54:01 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 12:54:01 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 12:54:01 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 12:54:01 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 12:54:01 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 12:54:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 12:54:01 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 12:54:01 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 12:54:01 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 12:54:01 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 12:54:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:54:01 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 12:54:01 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 12:54:01 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 12:54:01 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:54:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:54:01 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 12:54:01 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 12:54:01 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 12:54:01 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:54:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:54:01 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 12:54:01 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 12:54:01 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 12:54:01 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 12:54:01 DEBUG Settings:74 - Statistics: disabled
2021-08-02 12:54:01 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 12:54:01 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 12:54:01 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 12:54:01 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 12:54:01 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 12:54:01 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 12:54:01 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 12:54:01 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 12:54:01 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 12:54:01 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 12:54:01 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 12:54:01 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 12:54:01 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 12:54:01 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 12:54:01 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 12:54:01 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 12:54:01 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 12:54:01 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 12:54:01 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 12:54:01 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 12:54:01 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 12:54:01 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 12:54:01 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 12:54:01 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 12:54:01 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 12:54:01 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 12:54:01 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 12:54:01 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 12:54:01 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 12:54:01 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 12:54:01 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 12:54:01 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 12:54:01 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 12:54:01 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 12:54:01 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 12:54:01 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 12:54:01 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 12:54:01 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 12:54:01 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 12:54:01 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 12:54:01 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 12:54:01 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 12:54:01 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 12:54:02 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 12:54:02 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 12:54:02 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 12:54:02 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 12:54:02 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 12:54:02 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:54:02 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 12:54:02 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 12:54:02 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:54:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:54:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 12:54:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:54:03 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:54:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 12:54:03 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:54:03 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:54:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 12:54:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:54:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:54:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:54:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:54:03 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 12:54:03 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 12:54:03 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 12:54:03 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 12:54:03 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 12:54:03 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 12:54:03 DEBUG Table:516 - No alter strings for table : users
2021-08-02 12:54:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 12:54:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 12:54:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:54:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:54:04 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 12:54:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 12:54:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 12:54:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 648c9894-26e1-4b78-b165-6f504eec72fe (<unnamed>)
2021-08-02 12:54:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 12:54:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 12:54:04 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 12:54:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 12:54:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:54:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 12:54:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 12:54:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 12:54:04 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 12:54:04 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:54:04 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 12:54:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 12:54:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 12:54:04 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 12:54:04 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 12:54:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 12:54:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 12:54:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:54:04 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 12:54:04 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 12:54:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:54:04 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 12:54:04 DEBUG Loader:384 - Result set row: 0
2021-08-02 12:54:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 12:54:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 12:54:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 12:54:04 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 12:54:05 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 12:54:05 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 12:54:05 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 12:54:05 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 12:54:05 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 12:54:05 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 12:54:05 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 12:54:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 12:54:05 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 12:57:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 12:57:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 12:57:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 12:57:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 12:57:57 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 12:57:57 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 12:57:58 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 12:57:58 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 12:57:58 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 12:57:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 12:57:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 12:57:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 12:57:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 12:57:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 12:57:58 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 12:57:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 12:57:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 12:57:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 12:57:59 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 12:57:59 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 12:57:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 12:57:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 12:57:59 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 12:58:01 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 12:58:01 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 12:58:01 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 12:58:01 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 12:58:01 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 12:58:07 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 12:58:07 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:58:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 12:58:07 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 12:58:07 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 12:58:07 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 12:58:07 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:58:07 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 12:58:07 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 12:58:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 12:58:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 12:58:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property email
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property password
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property username
2021-08-02 12:58:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:58:08 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 12:58:08 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 12:58:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 12:58:08 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 12:58:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:58:08 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 12:58:08 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 12:58:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property des
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property type
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 12:58:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:58:08 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 12:58:08 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 12:58:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 12:58:08 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 12:58:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 12:58:08 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 12:58:08 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 12:58:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 12:58:08 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 12:58:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 12:58:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 12:58:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 12:58:08 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 12:58:08 DEBUG PropertyBinder:266 - Building property status
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 12:58:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 12:58:08 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 12:58:08 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 12:58:08 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 12:58:08 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 12:58:08 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 12:58:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 12:58:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 12:58:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 12:58:08 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 12:58:08 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 12:58:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:58:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 12:58:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 12:58:08 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 12:58:08 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:58:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:58:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 12:58:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 12:58:08 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 12:58:08 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 12:58:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 12:58:08 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 12:58:08 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 12:58:08 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 12:58:08 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 12:58:08 DEBUG Settings:74 - Statistics: disabled
2021-08-02 12:58:08 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 12:58:08 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 12:58:08 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 12:58:08 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 12:58:08 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 12:58:08 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 12:58:08 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 12:58:08 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 12:58:08 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 12:58:08 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 12:58:08 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 12:58:08 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 12:58:08 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 12:58:08 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 12:58:08 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 12:58:08 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 12:58:08 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 12:58:08 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 12:58:08 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 12:58:08 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 12:58:08 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 12:58:08 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 12:58:08 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 12:58:08 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 12:58:08 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 12:58:08 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 12:58:08 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 12:58:08 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 12:58:08 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 12:58:08 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 12:58:08 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 12:58:08 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 12:58:08 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 12:58:08 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 12:58:08 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 12:58:08 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 12:58:08 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 12:58:08 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 12:58:08 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 12:58:08 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 12:58:08 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 12:58:08 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 12:58:08 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 12:58:08 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 12:58:08 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 12:58:08 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 12:58:08 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 12:58:08 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 12:58:08 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 12:58:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:58:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:58:09 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 12:58:09 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 12:58:09 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 12:58:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 12:58:09 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 12:58:09 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 12:58:09 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:58:09 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 12:58:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:58:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:58:09 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:58:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 12:58:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:58:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 12:58:09 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 12:58:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 12:58:10 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:58:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 12:58:10 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:58:10 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 12:58:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 12:58:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 12:58:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 12:58:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 12:58:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 12:58:10 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 12:58:10 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 12:58:10 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 12:58:10 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 12:58:10 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 12:58:10 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 12:58:10 DEBUG Table:516 - No alter strings for table : users
2021-08-02 12:58:10 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 12:58:10 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 12:58:10 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:58:10 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 12:58:10 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 12:58:10 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 12:58:10 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 12:58:10 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: c56c0e02-c235-4bd2-9573-e7926b506e00 (<unnamed>)
2021-08-02 12:58:10 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 12:58:11 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 12:58:11 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 12:58:11 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 12:58:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:58:11 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 12:58:11 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 12:58:11 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 12:58:11 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 12:58:11 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 12:58:11 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 12:58:11 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 12:58:11 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 12:58:11 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 12:58:11 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 12:58:11 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 12:58:11 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 12:58:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:58:11 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 12:58:11 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 12:58:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 12:58:11 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 12:58:11 DEBUG Loader:384 - Result set row: 0
2021-08-02 12:58:11 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 12:58:11 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 12:58:11 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 12:58:11 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 12:58:11 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 12:58:11 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 12:58:11 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 12:58:11 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 12:58:11 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 12:58:11 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 12:58:11 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 12:58:11 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 12:58:11 INFO  Logging:46 - User was logged in
2021-08-02 13:07:59 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 13:09:19 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 13:10:31 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 13:13:10 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 13:16:34 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 13:18:31 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 13:19:17 WARN  Logging:38 - User tried logging in that does not exist
2021-08-02 16:02:36 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:02:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:02:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:02:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:02:36 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:02:36 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:02:37 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:02:37 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:02:37 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:02:37 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:02:37 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:02:37 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:02:37 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:02:37 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:02:37 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:02:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:02:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:02:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:02:38 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:02:38 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:02:38 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:02:38 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:02:38 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:02:38 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:02:39 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:02:39 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:02:39 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:02:39 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:02:39 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:02:45 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 16:02:45 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:02:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:02:45 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:02:45 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 16:02:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:02:45 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 16:02:45 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 16:02:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 16:02:45 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 16:02:45 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 16:02:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 16:02:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 16:02:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 16:02:45 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 16:02:45 DEBUG PropertyBinder:266 - Building property email
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 16:02:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 16:02:45 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 16:02:45 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 16:02:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 16:02:45 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 16:02:45 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 16:02:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 16:02:45 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 16:02:45 DEBUG PropertyBinder:266 - Building property password
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:45 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 16:02:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 16:02:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 16:02:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 16:02:45 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 16:02:45 DEBUG PropertyBinder:266 - Building property username
2021-08-02 16:02:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:02:46 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 16:02:46 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 16:02:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:02:46 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 16:02:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:02:46 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 16:02:46 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 16:02:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property des
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property type
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 16:02:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:02:46 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 16:02:46 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 16:02:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:02:46 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 16:02:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:02:46 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 16:02:46 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 16:02:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:02:46 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 16:02:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:02:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 16:02:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 16:02:46 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 16:02:46 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 16:02:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 16:02:46 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 16:02:46 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 16:02:46 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 16:02:46 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 16:02:46 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 16:02:46 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 16:02:46 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 16:02:46 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 16:02:46 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 16:02:46 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 16:02:46 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:02:46 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 16:02:46 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 16:02:46 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 16:02:46 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:02:46 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:02:46 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 16:02:46 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 16:02:46 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 16:02:46 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:02:46 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:02:46 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 16:02:46 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 16:02:46 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 16:02:46 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 16:02:46 DEBUG Settings:74 - Statistics: disabled
2021-08-02 16:02:46 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 16:02:46 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 16:02:46 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 16:02:46 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 16:02:46 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 16:02:46 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 16:02:46 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 16:02:46 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 16:02:46 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 16:02:46 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 16:02:46 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 16:02:46 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 16:02:46 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 16:02:46 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 16:02:46 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 16:02:46 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 16:02:46 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 16:02:46 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 16:02:46 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 16:02:46 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 16:02:46 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 16:02:46 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 16:02:46 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 16:02:46 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 16:02:46 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 16:02:46 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 16:02:46 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 16:02:46 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 16:02:46 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 16:02:46 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 16:02:46 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 16:02:46 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 16:02:46 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 16:02:46 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 16:02:46 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 16:02:46 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 16:02:46 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 16:02:46 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 16:02:46 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 16:02:46 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 16:02:46 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 16:02:46 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 16:02:46 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 16:02:46 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 16:02:46 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 16:02:46 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 16:02:46 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 16:02:46 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 16:02:46 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:02:46 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 16:02:46 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 16:02:46 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:02:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:02:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 16:02:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:02:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:02:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 16:02:47 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:02:47 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:02:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 16:02:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:02:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:02:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:02:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:02:47 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 16:02:48 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 16:02:48 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 16:02:48 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 16:02:48 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 16:02:48 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 16:02:48 DEBUG Table:516 - No alter strings for table : users
2021-08-02 16:02:49 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 16:02:49 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 16:02:49 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:02:49 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:02:49 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 16:02:49 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 16:02:49 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 16:02:49 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: ffafa4ea-444a-4e69-84b6-45b033d17407 (<unnamed>)
2021-08-02 16:02:49 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 16:02:49 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 16:02:49 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 16:07:52 INFO  Logging:46 - User was logged in
2021-08-02 16:08:37 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:08:37 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:08:37 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:08:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:08:38 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:08:38 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:08:38 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:08:38 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:08:38 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:08:38 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:08:38 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:08:38 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:08:38 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:08:38 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:08:38 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:08:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:08:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:08:39 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:08:39 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:08:39 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:08:39 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:08:39 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:08:39 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:08:41 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:08:41 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:08:41 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:08:41 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:08:41 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:08:47 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 16:08:47 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:08:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:08:47 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:08:47 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 16:08:47 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 16:08:47 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:08:47 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 16:08:48 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 16:08:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property email
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property password
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property username
2021-08-02 16:08:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:08:48 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 16:08:48 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 16:08:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:08:48 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 16:08:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:08:48 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 16:08:48 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 16:08:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property des
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property type
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 16:08:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:08:48 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 16:08:48 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 16:08:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:08:48 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 16:08:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:08:48 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 16:08:48 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 16:08:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:08:48 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 16:08:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:08:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 16:08:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 16:08:48 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 16:08:48 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 16:08:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 16:08:48 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 16:08:48 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 16:08:48 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 16:08:48 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 16:08:48 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 16:08:48 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 16:08:48 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 16:08:48 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 16:08:48 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 16:08:48 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 16:08:48 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:08:48 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 16:08:48 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 16:08:48 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 16:08:48 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:08:48 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:08:48 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 16:08:48 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 16:08:48 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 16:08:48 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:08:48 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:08:48 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 16:08:48 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 16:08:48 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 16:08:48 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 16:08:48 DEBUG Settings:74 - Statistics: disabled
2021-08-02 16:08:48 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 16:08:48 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 16:08:48 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 16:08:48 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 16:08:48 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 16:08:48 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 16:08:48 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 16:08:48 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 16:08:48 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 16:08:48 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 16:08:48 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 16:08:48 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 16:08:48 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 16:08:48 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 16:08:48 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 16:08:48 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 16:08:48 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 16:08:48 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 16:08:48 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 16:08:48 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 16:08:48 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 16:08:48 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 16:08:48 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 16:08:48 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 16:08:48 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 16:08:48 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 16:08:48 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 16:08:48 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 16:08:48 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 16:08:48 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 16:08:48 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 16:08:48 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 16:08:48 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 16:08:48 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 16:08:48 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 16:08:48 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 16:08:48 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 16:08:48 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 16:08:48 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 16:08:48 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 16:08:48 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 16:08:48 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 16:08:48 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 16:08:49 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 16:08:49 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 16:08:49 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 16:08:49 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 16:08:49 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 16:08:49 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:08:49 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 16:08:49 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 16:08:49 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:08:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:08:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 16:08:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:08:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:08:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 16:08:50 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:08:50 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:08:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 16:08:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:08:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:08:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:08:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:08:50 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 16:08:50 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 16:08:50 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 16:08:50 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 16:08:50 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 16:08:50 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 16:08:50 DEBUG Table:516 - No alter strings for table : users
2021-08-02 16:08:51 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 16:08:51 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 16:08:51 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:08:51 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:08:51 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 16:08:51 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 16:08:51 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 16:08:51 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 8865c79a-6aff-42c5-9924-521ff23f749d (<unnamed>)
2021-08-02 16:08:51 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 16:08:52 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 16:08:52 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 16:09:54 INFO  Logging:46 - User was logged in
2021-08-02 16:13:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:13:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:13:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:13:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:13:50 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:13:50 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:13:50 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:13:50 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:13:50 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:13:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:13:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:13:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:13:51 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:13:51 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:13:51 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:13:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:13:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:13:51 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:13:51 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:13:51 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:13:51 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:13:51 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:13:51 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:13:53 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:13:53 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:13:53 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:13:53 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:13:53 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:13:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 16:13:59 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:13:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:13:59 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:13:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 16:13:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:13:59 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 16:13:59 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 16:13:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property email
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property password
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property username
2021-08-02 16:13:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:13:59 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 16:13:59 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 16:13:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:13:59 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 16:13:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:13:59 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 16:13:59 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 16:13:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property des
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property type
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 16:13:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:13:59 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 16:13:59 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 16:13:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:13:59 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 16:13:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:13:59 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 16:13:59 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 16:13:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:13:59 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 16:13:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:13:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 16:13:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 16:13:59 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 16:13:59 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 16:13:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 16:13:59 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 16:13:59 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 16:13:59 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 16:13:59 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 16:13:59 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 16:13:59 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 16:13:59 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 16:13:59 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 16:13:59 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 16:13:59 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 16:13:59 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:13:59 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 16:13:59 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 16:13:59 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 16:13:59 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:13:59 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:13:59 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 16:13:59 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 16:13:59 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 16:13:59 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:13:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:13:59 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 16:13:59 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 16:13:59 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 16:13:59 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 16:13:59 DEBUG Settings:74 - Statistics: disabled
2021-08-02 16:13:59 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 16:13:59 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 16:13:59 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 16:13:59 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 16:13:59 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 16:13:59 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 16:13:59 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 16:13:59 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 16:13:59 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 16:13:59 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 16:13:59 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 16:13:59 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 16:13:59 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 16:13:59 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 16:13:59 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 16:13:59 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 16:13:59 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 16:13:59 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 16:13:59 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 16:13:59 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 16:13:59 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 16:13:59 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 16:13:59 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 16:13:59 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 16:13:59 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 16:13:59 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 16:13:59 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 16:13:59 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 16:13:59 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 16:13:59 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 16:13:59 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 16:13:59 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 16:13:59 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 16:13:59 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 16:13:59 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 16:13:59 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 16:13:59 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 16:13:59 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 16:13:59 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 16:13:59 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 16:13:59 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 16:13:59 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 16:13:59 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 16:14:00 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 16:14:00 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 16:14:00 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 16:14:00 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 16:14:00 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 16:14:00 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:14:00 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 16:14:00 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 16:14:00 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:14:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:14:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:14:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:14:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:14:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 16:14:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:14:01 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:14:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 16:14:01 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:14:01 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:14:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 16:14:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:14:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:14:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:14:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:14:01 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 16:14:01 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 16:14:01 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 16:14:01 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 16:14:01 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 16:14:01 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 16:14:01 DEBUG Table:516 - No alter strings for table : users
2021-08-02 16:14:02 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 16:14:02 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 16:14:02 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:14:02 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:14:02 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 16:14:02 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 16:14:02 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 16:14:02 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 3ff7916d-6d3c-4059-a9b4-f174e2ae1148 (<unnamed>)
2021-08-02 16:14:02 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 16:14:02 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 16:14:02 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 16:15:34 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:15:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:15:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:15:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:15:34 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:15:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:15:35 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:15:35 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:15:35 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:15:35 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:15:35 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:15:35 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:15:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:15:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:15:35 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:15:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:15:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:15:36 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:15:36 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:15:36 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:15:36 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:15:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:15:36 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:15:37 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:15:37 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:15:37 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:15:37 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:15:37 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:15:43 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 16:15:43 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:15:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:15:43 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:15:43 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 16:15:43 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:15:43 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 16:15:43 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 16:15:43 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property email
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property password
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property username
2021-08-02 16:15:43 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:15:43 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 16:15:43 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 16:15:43 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:15:43 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 16:15:43 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:15:43 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 16:15:43 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 16:15:43 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property des
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property type
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 16:15:43 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:15:43 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 16:15:43 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 16:15:43 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:15:43 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 16:15:43 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:15:43 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 16:15:43 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 16:15:43 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:15:43 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 16:15:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:15:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 16:15:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 16:15:43 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 16:15:43 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 16:15:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 16:15:43 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 16:15:43 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 16:15:43 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 16:15:43 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 16:15:43 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 16:15:43 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 16:15:43 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 16:15:43 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 16:15:43 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 16:15:43 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 16:15:43 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:15:43 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 16:15:43 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 16:15:43 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 16:15:43 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:15:43 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:15:43 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 16:15:43 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 16:15:43 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 16:15:43 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:15:43 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:15:43 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 16:15:43 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 16:15:43 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 16:15:43 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 16:15:43 DEBUG Settings:74 - Statistics: disabled
2021-08-02 16:15:43 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 16:15:43 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 16:15:43 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 16:15:43 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 16:15:43 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 16:15:43 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 16:15:43 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 16:15:43 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 16:15:43 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 16:15:43 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 16:15:43 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 16:15:43 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 16:15:43 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 16:15:43 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 16:15:43 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 16:15:43 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 16:15:43 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 16:15:43 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 16:15:43 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 16:15:43 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 16:15:43 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 16:15:43 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 16:15:43 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 16:15:43 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 16:15:43 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 16:15:43 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 16:15:43 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 16:15:43 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 16:15:43 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 16:15:43 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 16:15:43 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 16:15:43 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 16:15:43 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 16:15:43 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 16:15:43 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 16:15:43 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 16:15:44 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 16:15:44 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 16:15:44 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 16:15:44 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 16:15:44 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 16:15:44 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 16:15:44 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 16:15:44 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 16:15:44 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 16:15:44 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 16:15:44 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 16:15:44 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 16:15:44 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:15:44 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 16:15:44 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 16:15:44 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:15:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:15:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 16:15:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:15:45 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:15:45 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 16:15:45 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:15:45 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:15:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 16:15:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:15:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:15:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:15:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:15:45 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 16:15:45 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 16:15:45 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 16:15:45 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 16:15:45 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 16:15:45 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 16:15:45 DEBUG Table:516 - No alter strings for table : users
2021-08-02 16:15:46 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 16:15:46 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 16:15:46 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:15:46 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:15:46 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 16:15:46 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 16:15:46 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 16:15:46 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0284ac00-82c2-439e-bbac-c6c48bc633b5 (<unnamed>)
2021-08-02 16:15:46 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 16:15:46 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 16:15:46 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 16:15:46 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 16:15:46 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 16:15:46 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 16:15:46 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 16:15:46 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 16:15:46 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 16:15:46 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:15:46 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 16:15:46 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 16:15:46 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 16:15:46 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 16:15:46 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 16:15:46 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 16:15:46 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 16:15:46 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 16:15:46 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 16:15:46 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 16:15:46 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 16:15:46 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 16:15:46 DEBUG Loader:384 - Result set row: 0
2021-08-02 16:15:46 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 16:15:46 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 16:15:46 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 16:15:46 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 16:15:47 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 16:15:47 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 16:15:47 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 16:15:47 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 16:15:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 16:15:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 16:15:47 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 16:15:47 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 16:15:47 INFO  Logging:46 - User was logged in
2021-08-02 16:36:15 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:36:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:36:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:36:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:36:16 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:36:16 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:36:16 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:36:16 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:36:16 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:36:16 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:36:16 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:36:16 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:36:17 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:36:17 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:36:17 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:36:17 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:36:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:36:17 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:36:17 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:36:17 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:36:17 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:36:17 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:36:17 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:36:22 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:36:22 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:36:22 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:36:22 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:36:22 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:38:08 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:38:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:38:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:38:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:38:09 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:38:09 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:38:09 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:38:09 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:38:09 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:38:09 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:38:09 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:38:09 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:38:09 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:38:09 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:38:09 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:38:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:38:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:38:10 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:38:10 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:38:10 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:38:10 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:38:10 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:38:10 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:38:14 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:38:14 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:38:14 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:38:14 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:38:15 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:39:50 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 16:39:50 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:39:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:39:50 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:39:50 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 16:39:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:39:50 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 16:39:50 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 16:39:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property email
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property password
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property username
2021-08-02 16:39:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:39:50 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 16:39:50 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 16:39:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:39:50 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 16:39:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:39:50 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 16:39:50 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 16:39:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property des
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property type
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 16:39:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 16:39:50 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 16:39:50 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 16:39:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 16:39:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:39:50 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 16:39:50 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 16:39:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 16:39:51 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 16:39:51 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 16:39:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 16:39:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 16:39:51 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 16:39:51 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:39:51 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 16:39:51 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 16:39:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:39:51 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 16:39:51 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 16:39:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 16:39:51 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 16:39:51 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 16:39:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:39:51 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:39:51 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 16:39:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:39:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 16:39:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 16:39:51 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 16:39:51 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 16:39:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 16:39:51 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 16:39:51 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 16:39:51 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 16:39:51 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 16:39:51 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 16:39:51 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 16:39:51 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 16:39:51 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 16:39:51 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 16:39:51 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 16:39:51 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:39:51 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 16:39:51 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 16:39:51 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 16:39:51 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:39:51 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:39:51 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 16:39:51 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 16:39:51 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 16:39:51 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:39:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:39:51 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 16:39:51 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 16:39:51 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 16:39:51 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 16:39:51 DEBUG Settings:74 - Statistics: disabled
2021-08-02 16:39:51 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 16:39:51 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 16:39:51 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 16:39:51 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 16:39:51 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 16:39:51 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 16:39:51 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 16:39:51 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 16:39:51 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 16:39:51 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 16:39:51 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 16:39:51 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 16:39:51 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 16:39:51 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 16:39:51 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 16:39:51 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 16:39:51 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 16:39:51 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 16:39:51 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 16:39:51 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 16:39:51 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 16:39:51 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 16:39:51 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 16:39:51 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 16:39:51 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 16:39:51 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 16:39:51 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 16:39:51 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 16:39:51 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 16:39:51 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 16:39:51 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 16:39:51 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 16:39:51 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 16:39:51 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 16:39:51 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 16:39:51 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 16:39:51 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 16:39:51 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 16:39:51 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 16:39:51 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 16:39:51 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 16:39:51 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 16:39:51 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 16:39:52 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 16:39:52 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 16:39:52 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 16:39:52 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 16:39:52 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 16:39:52 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:39:52 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 16:39:52 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 16:39:52 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:39:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:39:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 16:39:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:39:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:39:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 16:39:53 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:39:53 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:39:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 16:39:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:39:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:39:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:39:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:39:53 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 16:39:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 16:39:55 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 16:39:55 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 16:39:55 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 16:39:55 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 16:39:55 DEBUG Table:516 - No alter strings for table : users
2021-08-02 16:40:20 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:40:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:40:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:40:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:40:21 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:40:21 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:40:21 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:40:21 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:40:21 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:40:21 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:40:21 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:40:21 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:40:21 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:40:21 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:40:21 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:40:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:40:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:40:22 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:40:22 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:40:22 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:40:22 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:40:22 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:40:22 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:40:28 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:40:28 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:40:28 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:40:28 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:40:28 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:41:44 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 16:41:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 16:41:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 16:41:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 16:41:44 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 16:41:44 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 16:41:44 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 16:41:44 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 16:41:44 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 16:41:44 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 16:41:44 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 16:41:44 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 16:41:44 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 16:41:44 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 16:41:44 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 16:41:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 16:41:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 16:41:45 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 16:41:45 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 16:41:45 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 16:41:45 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 16:41:45 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 16:41:45 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 16:41:47 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 16:41:47 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 16:41:47 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 16:41:47 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 16:41:47 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 16:41:53 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 16:41:53 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:41:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 16:41:53 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 16:41:53 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 16:41:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:41:53 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 16:41:53 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 16:41:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property email
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property password
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property username
2021-08-02 16:41:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:41:53 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 16:41:53 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 16:41:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 16:41:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 16:41:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:41:53 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 16:41:53 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 16:41:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property des
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property type
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 16:41:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:41:53 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 16:41:53 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 16:41:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 16:41:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 16:41:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 16:41:53 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 16:41:53 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 16:41:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 16:41:53 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 16:41:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 16:41:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 16:41:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 16:41:53 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 16:41:53 DEBUG PropertyBinder:266 - Building property status
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 16:41:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 16:41:53 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 16:41:53 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 16:41:53 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 16:41:53 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 16:41:53 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 16:41:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 16:41:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 16:41:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 16:41:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 16:41:53 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 16:41:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:41:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 16:41:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 16:41:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 16:41:53 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:41:53 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:41:53 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 16:41:53 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 16:41:53 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 16:41:53 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 16:41:53 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 16:41:53 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 16:41:53 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 16:41:53 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 16:41:53 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 16:41:53 DEBUG Settings:74 - Statistics: disabled
2021-08-02 16:41:53 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 16:41:53 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 16:41:53 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 16:41:53 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 16:41:53 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 16:41:53 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 16:41:53 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 16:41:53 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 16:41:53 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 16:41:53 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 16:41:53 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 16:41:53 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 16:41:53 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 16:41:53 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 16:41:53 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 16:41:53 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 16:41:53 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 16:41:53 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 16:41:53 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 16:41:53 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 16:41:53 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 16:41:53 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 16:41:53 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 16:41:53 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 16:41:53 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 16:41:53 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 16:41:53 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 16:41:53 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 16:41:53 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 16:41:53 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 16:41:53 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 16:41:53 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 16:41:53 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 16:41:53 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 16:41:53 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 16:41:53 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 16:41:53 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 16:41:53 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 16:41:53 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 16:41:53 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 16:41:53 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 16:41:53 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 16:41:53 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 16:41:54 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 16:41:54 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 16:41:54 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 16:41:54 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 16:41:54 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 16:41:54 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:41:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 16:41:54 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 16:41:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 16:41:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 16:41:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:41:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:41:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 16:41:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 16:41:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 16:41:55 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:41:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 16:41:55 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:41:55 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 16:41:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 16:41:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 16:41:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 16:41:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 16:41:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 16:41:55 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 16:41:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 16:41:55 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 16:41:55 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 16:41:55 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 16:41:55 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 16:41:55 DEBUG Table:516 - No alter strings for table : users
2021-08-02 16:41:56 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 16:41:56 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 16:41:56 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:41:56 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 16:41:56 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 16:41:56 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 16:41:56 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 16:41:56 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: c7cdf2b2-abd6-4070-aa69-ebd108afa7bc (<unnamed>)
2021-08-02 16:41:56 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 16:41:56 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 16:41:56 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 16:41:56 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 16:41:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 16:41:56 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 16:41:56 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 16:41:56 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 16:41:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 16:41:56 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 16:41:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 16:41:56 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 16:41:56 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 16:41:56 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 16:41:56 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 16:41:56 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 16:41:56 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 16:41:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 16:41:56 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 16:41:56 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 16:41:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 16:41:56 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 16:41:56 DEBUG Loader:384 - Result set row: 0
2021-08-02 16:41:56 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 16:41:56 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 16:41:56 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 16:41:56 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 16:41:56 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 16:41:56 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 16:41:56 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 16:41:56 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 16:41:56 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 16:41:56 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 16:41:56 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 16:41:56 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 16:41:56 INFO  Logging:46 - User was logged in
2021-08-02 20:09:41 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 20:09:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 20:09:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 20:09:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 20:09:41 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 20:09:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 20:09:41 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 20:09:41 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 20:09:41 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 20:09:42 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 20:09:42 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 20:09:42 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 20:09:42 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 20:09:42 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 20:09:42 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 20:09:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 20:09:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 20:09:42 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 20:09:42 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 20:09:42 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 20:09:42 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 20:09:42 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 20:09:42 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 20:09:44 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 20:09:44 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 20:09:44 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 20:09:44 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 20:09:44 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 20:09:51 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 20:09:51 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 20:09:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 20:09:51 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:09:51 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 20:09:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:09:51 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 20:09:51 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 20:09:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property email
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property password
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property username
2021-08-02 20:09:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:09:51 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 20:09:51 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 20:09:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:09:51 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 20:09:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:09:51 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 20:09:51 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 20:09:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property des
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property status
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property type
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 20:09:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:09:51 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 20:09:51 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 20:09:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:09:51 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 20:09:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:09:51 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 20:09:51 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 20:09:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:09:51 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 20:09:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 20:09:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 20:09:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 20:09:51 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 20:09:51 DEBUG PropertyBinder:266 - Building property status
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 20:09:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 20:09:51 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 20:09:51 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 20:09:51 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 20:09:51 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 20:09:51 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 20:09:51 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 20:09:51 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 20:09:51 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 20:09:51 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 20:09:51 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 20:09:51 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 20:09:51 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 20:09:51 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 20:09:51 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 20:09:51 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 20:09:51 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:09:51 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 20:09:51 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 20:09:51 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 20:09:51 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 20:09:51 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 20:09:51 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 20:09:51 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 20:09:51 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 20:09:51 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 20:09:51 DEBUG Settings:74 - Statistics: disabled
2021-08-02 20:09:51 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 20:09:51 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 20:09:51 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 20:09:51 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 20:09:51 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 20:09:51 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 20:09:51 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 20:09:51 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 20:09:51 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 20:09:51 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 20:09:51 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 20:09:51 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 20:09:51 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 20:09:51 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 20:09:51 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 20:09:51 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 20:09:51 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 20:09:51 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 20:09:51 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 20:09:51 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 20:09:51 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 20:09:51 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 20:09:51 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 20:09:51 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 20:09:51 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 20:09:51 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 20:09:51 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 20:09:51 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 20:09:51 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 20:09:51 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 20:09:51 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 20:09:51 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 20:09:51 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 20:09:51 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 20:09:51 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 20:09:51 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 20:09:51 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 20:09:51 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 20:09:51 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 20:09:51 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 20:09:51 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 20:09:51 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 20:09:51 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 20:09:52 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 20:09:52 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 20:09:52 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 20:09:52 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 20:09:52 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 20:09:52 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:09:52 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 20:09:52 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 20:09:52 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:09:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:09:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 20:09:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 20:09:53 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 20:09:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 20:09:53 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 20:09:53 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:09:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 20:09:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:09:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:09:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:09:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 20:09:53 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 20:09:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 20:09:53 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 20:09:53 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 20:09:53 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 20:09:53 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 20:09:53 DEBUG Table:516 - No alter strings for table : users
2021-08-02 20:09:54 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 20:09:54 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 20:09:54 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 20:09:54 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 20:09:54 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 20:09:54 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 20:09:54 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 20:09:54 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e6953d87-200a-403b-a545-007334061e08 (<unnamed>)
2021-08-02 20:09:54 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 20:09:54 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 20:09:54 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 20:09:54 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=username
2021-08-02 20:09:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:09:54 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'username'

2021-08-02 20:09:54 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 20:09:54 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 20:09:54 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 20:09:54 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:09:54 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 20:09:54 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 20:09:54 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:09:54 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 20:09:54 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 20:09:54 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ( users0_.username {synthetic-alias} username ) ) ) )
2021-08-02 20:09:54 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 20:09:54 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 20:09:54 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 20:09:54 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'username' {originalText=username}

2021-08-02 20:09:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:09:54 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=username
2021-08-02 20:09:54 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=users0_.username
2021-08-02 20:09:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:12:41 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 20:12:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 20:12:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 20:12:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 20:12:41 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 20:12:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 20:12:41 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 20:12:41 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 20:12:41 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 20:12:41 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 20:12:41 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 20:12:41 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 20:12:41 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 20:12:42 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 20:12:42 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 20:12:42 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 20:12:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 20:12:42 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 20:12:42 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 20:12:42 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 20:12:42 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 20:12:42 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 20:12:42 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 20:12:44 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 20:12:44 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 20:12:44 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 20:12:44 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 20:12:44 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 20:12:52 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 20:12:52 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 20:12:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 20:12:52 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:12:52 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 20:12:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:12:52 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 20:12:52 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 20:12:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property email
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property password
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property username
2021-08-02 20:12:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:12:52 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 20:12:52 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 20:12:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:12:52 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 20:12:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:12:52 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 20:12:52 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 20:12:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property des
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property status
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property type
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 20:12:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:12:52 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 20:12:52 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 20:12:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:12:52 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 20:12:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:12:52 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 20:12:52 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 20:12:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:12:52 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 20:12:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 20:12:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 20:12:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 20:12:52 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 20:12:52 DEBUG PropertyBinder:266 - Building property status
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 20:12:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 20:12:52 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 20:12:52 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 20:12:52 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 20:12:52 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 20:12:52 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 20:12:52 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 20:12:52 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 20:12:52 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 20:12:52 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 20:12:52 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 20:12:52 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 20:12:52 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 20:12:52 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 20:12:52 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 20:12:52 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 20:12:52 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:12:52 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 20:12:52 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 20:12:52 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 20:12:52 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 20:12:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 20:12:52 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 20:12:52 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 20:12:52 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 20:12:52 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 20:12:52 DEBUG Settings:74 - Statistics: disabled
2021-08-02 20:12:52 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 20:12:52 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 20:12:52 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 20:12:52 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 20:12:52 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 20:12:52 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 20:12:52 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 20:12:52 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 20:12:52 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 20:12:52 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 20:12:52 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 20:12:52 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 20:12:52 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 20:12:52 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 20:12:52 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 20:12:52 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 20:12:52 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 20:12:52 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 20:12:52 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 20:12:52 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 20:12:52 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 20:12:52 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 20:12:52 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 20:12:52 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 20:12:52 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 20:12:52 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 20:12:52 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 20:12:52 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 20:12:52 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 20:12:52 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 20:12:52 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 20:12:52 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 20:12:52 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 20:12:52 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 20:12:52 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 20:12:52 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 20:12:52 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 20:12:52 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 20:12:52 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 20:12:52 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 20:12:52 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 20:12:52 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 20:12:52 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 20:12:53 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 20:12:53 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 20:12:53 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 20:12:53 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 20:12:53 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 20:12:53 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:12:53 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 20:12:53 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 20:12:53 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:12:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 20:12:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 20:12:54 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 20:12:54 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 20:12:54 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 20:12:54 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:12:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 20:12:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:12:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:12:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:12:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 20:12:54 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 20:12:54 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 20:12:54 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 20:12:54 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 20:12:54 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 20:12:54 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 20:12:54 DEBUG Table:516 - No alter strings for table : users
2021-08-02 20:12:55 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 20:12:55 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 20:12:55 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 20:12:55 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 20:12:55 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 20:12:55 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 20:12:55 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 20:12:55 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1d92408b-bb48-4195-886a-7db4b92b8e92 (<unnamed>)
2021-08-02 20:12:55 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 20:12:55 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 20:12:55 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 20:12:55 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 20:12:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:12:55 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 20:12:56 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 20:12:56 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 20:12:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 20:12:56 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:12:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 20:12:56 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 20:12:56 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 20:12:56 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 20:12:56 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 20:12:56 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 20:12:56 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 20:12:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:12:56 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 20:12:56 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 20:12:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:12:56 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 20:12:56 DEBUG Loader:384 - Result set row: 0
2021-08-02 20:12:56 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 20:12:56 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 20:12:56 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 20:12:56 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 20:12:56 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 20:12:56 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 20:12:56 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 20:12:56 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 20:12:56 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 20:12:56 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 20:12:56 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 20:12:56 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 20:12:56 INFO  Logging:46 - User was logged in
2021-08-02 20:52:15 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 20:52:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 20:52:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 20:52:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 20:52:16 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 20:52:16 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 20:52:16 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 20:52:16 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 20:52:16 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 20:52:17 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 20:52:17 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 20:52:17 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 20:52:17 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 20:52:17 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 20:52:17 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 20:52:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 20:52:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 20:52:18 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 20:52:18 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 20:52:18 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 20:52:18 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 20:52:18 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 20:52:18 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 20:52:20 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 20:52:20 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 20:52:20 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 20:52:20 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 20:52:20 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 20:52:28 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 20:52:28 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 20:52:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 20:52:28 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 20:52:28 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 20:52:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:52:28 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 20:52:28 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 20:52:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property email
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property password
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property username
2021-08-02 20:52:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:52:28 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 20:52:28 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 20:52:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 20:52:28 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 20:52:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:52:28 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 20:52:28 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 20:52:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property des
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property status
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property type
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 20:52:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:52:28 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 20:52:28 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 20:52:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 20:52:28 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 20:52:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 20:52:28 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 20:52:28 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 20:52:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 20:52:28 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 20:52:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 20:52:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 20:52:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 20:52:28 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 20:52:28 DEBUG PropertyBinder:266 - Building property status
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 20:52:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 20:52:28 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 20:52:28 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 20:52:28 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 20:52:28 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 20:52:28 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 20:52:28 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 20:52:28 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 20:52:28 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 20:52:28 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 20:52:28 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 20:52:28 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 20:52:28 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 20:52:28 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 20:52:28 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 20:52:28 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 20:52:28 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:52:28 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 20:52:28 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 20:52:28 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 20:52:28 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 20:52:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 20:52:28 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 20:52:28 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 20:52:28 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 20:52:28 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 20:52:28 DEBUG Settings:74 - Statistics: disabled
2021-08-02 20:52:28 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 20:52:28 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 20:52:28 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 20:52:28 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 20:52:28 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 20:52:28 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 20:52:28 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 20:52:28 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 20:52:28 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 20:52:28 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 20:52:28 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 20:52:28 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 20:52:28 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 20:52:28 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 20:52:28 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 20:52:28 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 20:52:28 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 20:52:28 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 20:52:28 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 20:52:28 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 20:52:28 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 20:52:28 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 20:52:28 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 20:52:28 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 20:52:28 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 20:52:28 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 20:52:28 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 20:52:28 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 20:52:28 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 20:52:28 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 20:52:28 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 20:52:28 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 20:52:28 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 20:52:28 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 20:52:29 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 20:52:29 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 20:52:29 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 20:52:29 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 20:52:29 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 20:52:29 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 20:52:29 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 20:52:29 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 20:52:29 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 20:52:29 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 20:52:29 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 20:52:29 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 20:52:29 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 20:52:29 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 20:52:29 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:52:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:52:29 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 20:52:29 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 20:52:29 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 20:52:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:52:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:52:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 20:52:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 20:52:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 20:52:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 20:52:31 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 20:52:31 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 20:52:31 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 20:52:31 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 20:52:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 20:52:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 20:52:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 20:52:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 20:52:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 20:52:31 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 20:52:31 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 20:52:31 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 20:52:31 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 20:52:31 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 20:52:31 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 20:52:31 DEBUG Table:516 - No alter strings for table : users
2021-08-02 20:52:32 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 20:52:32 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 20:52:32 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 20:52:32 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 20:52:32 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 20:52:32 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 20:52:32 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 20:52:32 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 792c5b50-51d7-4d9d-b52d-1bbd4125dddc (<unnamed>)
2021-08-02 20:52:32 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 20:52:33 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 20:52:33 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 20:52:33 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 20:52:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:52:33 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 20:52:33 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 20:52:33 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 20:52:33 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 20:52:33 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 20:52:33 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 20:52:33 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 20:52:33 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 20:52:33 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 20:52:33 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 20:52:33 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 20:52:33 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 20:52:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:52:33 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 20:52:33 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 20:52:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 20:52:33 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 20:52:33 DEBUG Loader:384 - Result set row: 0
2021-08-02 20:52:33 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 20:52:33 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 20:52:33 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 20:52:33 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 20:52:33 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 20:52:33 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 20:52:33 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 20:52:33 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 20:52:33 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 20:52:33 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 20:52:33 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 20:52:33 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 20:52:33 INFO  Logging:46 - User was logged in
2021-08-02 22:22:11 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 22:22:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 22:22:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 22:22:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 22:22:11 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 22:22:11 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 22:22:12 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 22:22:12 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 22:22:12 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 22:22:12 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 22:22:12 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 22:22:12 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 22:22:12 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 22:22:12 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 22:22:12 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 22:22:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 22:22:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 22:22:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 22:22:13 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 22:22:13 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 22:22:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 22:22:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 22:22:13 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 22:22:15 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 22:22:15 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 22:22:15 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 22:22:15 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 22:22:15 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 22:22:22 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 22:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 22:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 22:22:22 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 22:22:22 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 22:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:22:22 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 22:22:22 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 22:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property email
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property password
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property username
2021-08-02 22:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:22:22 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 22:22:22 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 22:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 22:22:22 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 22:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:22:22 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 22:22:22 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 22:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property des
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property status
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property type
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 22:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:22:22 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 22:22:22 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 22:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 22:22:22 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 22:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:22:22 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 22:22:22 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 22:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 22:22:22 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 22:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 22:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 22:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 22:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 22:22:22 DEBUG PropertyBinder:266 - Building property status
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 22:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 22:22:22 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 22:22:22 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 22:22:22 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 22:22:22 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 22:22:22 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 22:22:22 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 22:22:22 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 22:22:22 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 22:22:22 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 22:22:22 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 22:22:22 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 22:22:22 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 22:22:22 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 22:22:22 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 22:22:22 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 22:22:22 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 22:22:22 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 22:22:22 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 22:22:22 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 22:22:22 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 22:22:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 22:22:22 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 22:22:22 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 22:22:22 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 22:22:22 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 22:22:22 DEBUG Settings:74 - Statistics: disabled
2021-08-02 22:22:22 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 22:22:22 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 22:22:22 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 22:22:22 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 22:22:22 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 22:22:22 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 22:22:22 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 22:22:22 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 22:22:22 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 22:22:22 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 22:22:22 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 22:22:22 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 22:22:22 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 22:22:22 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 22:22:22 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 22:22:22 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 22:22:22 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 22:22:22 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 22:22:22 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 22:22:22 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 22:22:22 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 22:22:22 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 22:22:22 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 22:22:22 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 22:22:22 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 22:22:22 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 22:22:22 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 22:22:22 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 22:22:22 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 22:22:22 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 22:22:22 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 22:22:22 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 22:22:22 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 22:22:22 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 22:22:22 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 22:22:22 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 22:22:22 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 22:22:22 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 22:22:22 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 22:22:22 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 22:22:22 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 22:22:22 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 22:22:22 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 22:22:23 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 22:22:23 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 22:22:23 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 22:22:23 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 22:22:23 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 22:22:23 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 22:22:23 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 22:22:23 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 22:22:23 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 22:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 22:22:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 22:22:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 22:22:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 22:22:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 22:22:24 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 22:22:24 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:22:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 22:22:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:22:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:22:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:22:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 22:22:24 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 22:22:24 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 22:22:24 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 22:22:24 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 22:22:24 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 22:22:24 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 22:22:24 DEBUG Table:516 - No alter strings for table : users
2021-08-02 22:22:25 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 22:22:25 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 22:22:25 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 22:22:25 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 22:22:25 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 22:22:25 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 22:22:25 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 22:22:25 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0f34c70d-bf33-40a1-939a-0cf411c64e01 (<unnamed>)
2021-08-02 22:22:25 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 22:22:25 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 22:22:25 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 22:22:25 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 22:22:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 22:22:25 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 22:22:25 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 22:22:25 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 22:22:25 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 22:22:25 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 22:22:25 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 22:22:25 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 22:22:25 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 22:22:25 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 22:22:25 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 22:22:25 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 22:22:25 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 22:22:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 22:22:25 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 22:22:25 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 22:22:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 22:22:26 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 22:22:26 DEBUG Loader:384 - Result set row: 0
2021-08-02 22:22:26 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 22:22:26 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 22:22:26 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 22:22:26 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 22:22:26 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 22:22:26 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 22:22:26 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 22:22:26 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 22:22:26 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 22:22:26 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 22:22:26 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 22:22:26 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 22:22:26 INFO  Logging:46 - User was logged in
2021-08-02 22:54:21 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-02 22:54:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-02 22:54:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-02 22:54:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-02 22:54:21 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-02 22:54:21 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-02 22:54:21 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-02 22:54:21 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-02 22:54:21 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-02 22:54:22 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-02 22:54:22 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-02 22:54:22 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-02 22:54:22 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-02 22:54:22 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-02 22:54:22 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-02 22:54:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-02 22:54:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-02 22:54:22 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-02 22:54:22 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-02 22:54:22 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-02 22:54:22 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-02 22:54:22 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-02 22:54:22 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-02 22:54:24 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-02 22:54:24 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-02 22:54:24 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-02 22:54:24 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-02 22:54:24 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-02 22:54:30 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-02 22:54:30 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 22:54:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-02 22:54:30 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-02 22:54:30 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-02 22:54:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:54:31 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-02 22:54:31 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property userId
2021-08-02 22:54:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property email
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property firstName
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property lastName
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property password
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property username
2021-08-02 22:54:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:54:31 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-02 22:54:31 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property roleId
2021-08-02 22:54:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-02 22:54:31 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property uList
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property userRole
2021-08-02 22:54:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:54:31 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-02 22:54:31 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-02 22:54:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property amount
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property createDate
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property des
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property status
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property type
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-02 22:54:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:54:31 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-02 22:54:31 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property typeId
2021-08-02 22:54:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-02 22:54:31 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property tType
2021-08-02 22:54:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-02 22:54:31 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-02 22:54:31 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property statusId
2021-08-02 22:54:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-02 22:54:31 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-02 22:54:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-02 22:54:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-02 22:54:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-02 22:54:31 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-02 22:54:31 DEBUG PropertyBinder:266 - Building property status
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-02 22:54:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-02 22:54:31 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-02 22:54:31 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-02 22:54:31 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-02 22:54:31 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-02 22:54:31 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-02 22:54:31 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-02 22:54:31 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-02 22:54:31 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-02 22:54:31 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-02 22:54:31 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-02 22:54:31 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-02 22:54:31 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-02 22:54:31 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-02 22:54:31 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-02 22:54:31 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 22:54:31 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 22:54:31 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-02 22:54:31 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-02 22:54:31 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-02 22:54:31 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-02 22:54:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-02 22:54:31 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-02 22:54:31 DEBUG Settings:70 - SessionFactory name : null
2021-08-02 22:54:31 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-02 22:54:31 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-02 22:54:31 DEBUG Settings:74 - Statistics: disabled
2021-08-02 22:54:31 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-02 22:54:31 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-02 22:54:31 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-02 22:54:31 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-02 22:54:31 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-02 22:54:31 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-02 22:54:31 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-02 22:54:31 DEBUG Settings:84 - Default null ordering: NONE
2021-08-02 22:54:31 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-02 22:54:31 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-02 22:54:31 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-02 22:54:31 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-02 22:54:31 DEBUG Settings:92 - Query language substitutions: {}
2021-08-02 22:54:31 DEBUG Settings:93 - Named query checking : enabled
2021-08-02 22:54:31 DEBUG Settings:95 - Second-level cache: disabled
2021-08-02 22:54:31 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-02 22:54:31 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-02 22:54:31 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-02 22:54:31 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-02 22:54:31 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-02 22:54:31 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-02 22:54:31 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-02 22:54:31 DEBUG Settings:104 - JDBC batch size: 15
2021-08-02 22:54:31 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-02 22:54:31 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-02 22:54:31 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-02 22:54:31 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-02 22:54:31 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-02 22:54:31 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-02 22:54:31 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-02 22:54:31 DEBUG Settings:113 - JPA compliance - query : 
2021-08-02 22:54:31 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-02 22:54:31 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-02 22:54:31 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-02 22:54:31 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-02 22:54:31 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c20be82, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-02 22:54:31 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-02 22:54:31 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-02 22:54:31 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-02 22:54:31 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-02 22:54:31 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-02 22:54:31 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-02 22:54:31 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-02 22:54:32 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-02 22:54:32 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-02 22:54:32 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-02 22:54:32 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-02 22:54:32 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-02 22:54:32 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 22:54:32 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-02 22:54:32 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-02 22:54:32 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@444548a0]
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-02 22:54:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-02 22:54:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222afc67]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59901c4d]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3901f6af]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d82408]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f679798]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd164a6]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c18621b]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44550792]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66213a0d]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb8c8ce]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde0371]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@260a3a5e]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49206065]
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6438a7fe]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e51d054]
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@407873d3]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608bc8f8]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4743a322]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79316f3a]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-02 22:54:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fed1ec]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a565cbd]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-02 22:54:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 22:54:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295bf2a]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbf9e07]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-02 22:54:33 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ec3633f]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5d5621]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20576557]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 22:54:33 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@119c745c]
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ad6e5]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc776b7]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-02 22:54:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-02 22:54:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-02 22:54:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-02 22:54:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-02 22:54:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-02 22:54:33 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-02 22:54:34 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14ef2482] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-02 22:54:34 DEBUG Table:516 - No alter strings for table : r_status
2021-08-02 22:54:34 DEBUG Table:516 - No alter strings for table : r_type
2021-08-02 22:54:34 DEBUG Table:516 - No alter strings for table : reimb
2021-08-02 22:54:34 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-02 22:54:34 DEBUG Table:516 - No alter strings for table : users
2021-08-02 22:54:34 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-02 22:54:34 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-02 22:54:34 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 22:54:34 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-02 22:54:34 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-02 22:54:34 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-02 22:54:34 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64984b0f
2021-08-02 22:54:34 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: f234783c-681f-4761-846a-d81a9ea0659f (<unnamed>)
2021-08-02 22:54:34 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-02 22:54:35 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-02 22:54:35 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18b8d173
2021-08-02 22:54:35 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-02 22:54:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 22:54:35 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-02 22:54:35 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-02 22:54:35 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-02 22:54:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-02 22:54:35 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-02 22:54:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-02 22:54:35 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-02 22:54:35 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-02 22:54:35 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-02 22:54:35 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-02 22:54:35 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-02 22:54:35 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-02 22:54:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 22:54:35 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-02 22:54:35 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-02 22:54:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-02 22:54:35 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-02 22:54:35 DEBUG Loader:384 - Result set row: 0
2021-08-02 22:54:35 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-02 22:54:35 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-02 22:54:35 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-02 22:54:35 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-02 22:54:35 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-02 22:54:35 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-02 22:54:35 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-02 22:54:35 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-02 22:54:35 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-02 22:54:35 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-02 22:54:35 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-02 22:54:35 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-02 22:54:35 INFO  Logging:47 - User was logged in
2021-08-04 01:08:53 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-08-04 01:08:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-08-04 01:08:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-08-04 01:08:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-08-04 01:08:53 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-08-04 01:08:53 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-08-04 01:08:53 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-08-04 01:08:53 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-08-04 01:08:53 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-08-04 01:08:54 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-08-04 01:08:54 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-08-04 01:08:54 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-08-04 01:08:54 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-08-04 01:08:54 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-08-04 01:08:54 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@932bc4a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69997e9d
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37654521
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4de4b452
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ea9e1e2
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4d02f94e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d02f94e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@14555e0a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14555e0a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@6f46426d
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f46426d
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3e84448c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e84448c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e5afaa6
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@581ac8a8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67c33749
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a54a73f
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4efc180e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4efc180e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@156b88f5
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71def8f8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@32ee6fee
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32ee6fee
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47faa49c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66d3eec0
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58695725
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25fb8912
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ba3f27a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52af26ee
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e15b7e8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@434a63ab
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@194bcebf
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194bcebf
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@53ce1329
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ce1329
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@729d991e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@729d991e
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32502377
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21282ed8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437da279
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@290222c1
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@290222c1
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27462a88
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@201a4587
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@47d9a273
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47d9a273
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b0d79fc
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@29215f06
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29215f06
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@29215f06
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13fd2ccd
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@54e1c68b
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@273e7444
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@771a660
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@771a660
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@771a660
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@942a29c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@534a5a98
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@121314f7
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d5650ae
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c668e3
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b36aa0c
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@229c6181
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@229c6181
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@791f145a
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f09733f
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ffaf86
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4145bad8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4145bad8
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ab956d7
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3646a422
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750e2b97
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e27aa33
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e385cce
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddc9a9f
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@298a5e20
2021-08-04 01:08:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a7f1f10
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-08-04 01:08:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-08-04 01:08:54 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-08-04 01:08:55 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers]
2021-08-04 01:08:55 INFO  pooling:121 - HHH10001001: Connection properties: {user=username, password=password, dialect=org.hibernate.dialect.PostgreSQLDialect}
2021-08-04 01:08:55 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-08-04 01:08:55 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-08-04 01:08:55 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-08-04 01:08:56 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-08-04 01:08:56 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-08-04 01:08:56 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-08-04 01:08:56 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-08-04 01:08:56 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-08-04 01:09:03 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-08-04 01:09:03 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-04 01:09:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@476b0ae6
2021-08-04 01:09:03 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2dc54ad4
2021-08-04 01:09:03 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f12539]
2021-08-04 01:09:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Users
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-04 01:09:04 DEBUG EntityBinder:430 - Import with entity name Users
2021-08-04 01:09:04 DEBUG EntityBinder:873 - Bind entity com.example.model.Users on table users
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:userId]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for userId
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property userId
2021-08-04 01:09:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:email]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property email
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:firstName]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property firstName
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:lastName]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property lastName
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:password]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property password
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='role_FK', referencedColumn='', mappedBy=''}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property userRoles
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Users:username]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property username
2021-08-04 01:09:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.UserRoles
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-04 01:09:04 DEBUG EntityBinder:430 - Import with entity name UserRoles
2021-08-04 01:09:04 DEBUG EntityBinder:873 - Bind entity com.example.model.UserRoles on table user_roles
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleId with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:roleId]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for roleId
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property roleId
2021-08-04 01:09:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, assigned, , ...)
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=uList_KEY, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='uList_KEY', referencedColumn='null', mappedBy='null'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userRoles'}
2021-08-04 01:09:04 DEBUG CollectionBinder:449 - Collection role: com.example.model.UserRoles.uList
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property uList
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userRole with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.UserRoles:userRole]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for userRole
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property userRole
2021-08-04 01:09:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Reimbursement
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-04 01:09:04 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2021-08-04 01:09:04 DEBUG EntityBinder:873 - Bind entity com.example.model.Reimbursement on table reimb
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=reimb_id, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbId with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:reimbId]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbId
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property reimbId
2021-08-04 01:09:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimb_id)]), reimbId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:amount]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property amount
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=submited, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property createDate with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:createDate]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for createDate
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property createDate
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property des with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:des]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for des
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property des
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author_fk', referencedColumn='user_id', mappedBy=''}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rAuthor, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property rAuthor
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver_fk', referencedColumn='user_id', mappedBy=''}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=rResolver, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property rResolver
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='status_fk', referencedColumn='', mappedBy=''}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property status
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='type_fk', referencedColumn='', mappedBy=''}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=type, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property type
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimb), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property updateDate with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Reimbursement:updateDate]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for updateDate
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property updateDate
2021-08-04 01:09:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementType
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-04 01:09:04 DEBUG EntityBinder:430 - Import with entity name ReimbursementType
2021-08-04 01:09:04 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementType on table r_type
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeId with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:typeId]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for typeId
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property typeId
2021-08-04 01:09:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(type_id)]), typeId, assigned, , ...)
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=reim_type, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursementType with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementType:reimbursementType]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursementType
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property reimbursementType
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_type), mappingColumn=tType_KEY, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='tType_KEY', referencedColumn='null', mappedBy='null'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2021-08-04 01:09:04 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementType.tType
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property tType
2021-08-04 01:09:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.ReimbursementStatus
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-08-04 01:09:04 DEBUG EntityBinder:430 - Import with entity name ReimbursementStatus
2021-08-04 01:09:04 DEBUG EntityBinder:873 - Bind entity com.example.model.ReimbursementStatus on table r_status
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status_id, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusId with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:statusId]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for statusId
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property statusId
2021-08-04 01:09:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(status_id)]), statusId, assigned, , ...)
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=rStatus_KEY, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='rStatus_KEY', referencedColumn='null', mappedBy='null'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2021-08-04 01:09:04 DEBUG CollectionBinder:449 - Collection role: com.example.model.ReimbursementStatus.rStatus
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property rStatus
2021-08-04 01:09:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(r_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-08-04 01:09:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-08-04 01:09:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.ReimbursementStatus:status]
2021-08-04 01:09:04 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2021-08-04 01:09:04 DEBUG PropertyBinder:266 - Building property status
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userId
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleId
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userRole
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbId
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for createDate
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for des
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for updateDate
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeId
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursementType
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusId
2021-08-04 01:09:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2021-08-04 01:09:04 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-08-04 01:09:04 DEBUG PrimaryKey:35 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2021-08-04 01:09:04 DEBUG PrimaryKey:35 - Forcing column [reimb_id] to be non-null as it is part of the primary key for table [reimb]
2021-08-04 01:09:04 DEBUG PrimaryKey:35 - Forcing column [type_id] to be non-null as it is part of the primary key for table [r_type]
2021-08-04 01:09:04 DEBUG PrimaryKey:35 - Forcing column [status_id] to be non-null as it is part of the primary key for table [r_status]
2021-08-04 01:09:04 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.UserRoles.uList
2021-08-04 01:09:04 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.UserRoles.uList through a foreign key
2021-08-04 01:09:04 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.UserRoles.uList -> users
2021-08-04 01:09:04 DEBUG TableBinder:565 - Retrieving property com.example.model.Users.userRoles
2021-08-04 01:09:04 DEBUG CollectionSecondPass:68 - Mapped collection key: role_FK, one-to-many: com.example.model.Users
2021-08-04 01:09:04 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementType.tType
2021-08-04 01:09:04 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementType.tType through a foreign key
2021-08-04 01:09:04 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementType.tType -> reimb
2021-08-04 01:09:04 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.type
2021-08-04 01:09:04 DEBUG CollectionSecondPass:68 - Mapped collection key: type_fk, one-to-many: com.example.model.Reimbursement
2021-08-04 01:09:04 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-04 01:09:04 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.model.ReimbursementStatus.rStatus through a foreign key
2021-08-04 01:09:04 DEBUG CollectionBinder:936 - Mapping collection: com.example.model.ReimbursementStatus.rStatus -> reimb
2021-08-04 01:09:04 DEBUG TableBinder:565 - Retrieving property com.example.model.Reimbursement.status
2021-08-04 01:09:04 DEBUG CollectionSecondPass:68 - Mapped collection key: status_fk, one-to-many: com.example.model.Reimbursement
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.Users
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementStatus
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.ReimbursementType
2021-08-04 01:09:04 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.model.UserRoles
2021-08-04 01:09:04 DEBUG SessionFactoryImpl:196 - Building session factory
2021-08-04 01:09:04 DEBUG Settings:70 - SessionFactory name : null
2021-08-04 01:09:04 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-08-04 01:09:04 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-08-04 01:09:04 DEBUG Settings:74 - Statistics: disabled
2021-08-04 01:09:04 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-08-04 01:09:04 DEBUG Settings:77 - Default entity-mode: pojo
2021-08-04 01:09:04 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-08-04 01:09:04 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-08-04 01:09:04 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-08-04 01:09:04 DEBUG Settings:82 - Default batch fetch size: -1
2021-08-04 01:09:04 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-08-04 01:09:04 DEBUG Settings:84 - Default null ordering: NONE
2021-08-04 01:09:04 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-08-04 01:09:04 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-08-04 01:09:04 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-08-04 01:09:04 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-08-04 01:09:04 DEBUG Settings:92 - Query language substitutions: {}
2021-08-04 01:09:04 DEBUG Settings:93 - Named query checking : enabled
2021-08-04 01:09:04 DEBUG Settings:95 - Second-level cache: disabled
2021-08-04 01:09:04 DEBUG Settings:96 - Second-level query cache: disabled
2021-08-04 01:09:04 DEBUG Settings:97 - Second-level query cache factory: null
2021-08-04 01:09:04 DEBUG Settings:98 - Second-level cache region prefix: null
2021-08-04 01:09:04 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-08-04 01:09:04 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-08-04 01:09:04 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-08-04 01:09:04 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-08-04 01:09:04 DEBUG Settings:104 - JDBC batch size: 15
2021-08-04 01:09:04 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-08-04 01:09:04 DEBUG Settings:106 - Scrollable result sets: enabled
2021-08-04 01:09:04 DEBUG Settings:107 - Wrap result sets: disabled
2021-08-04 01:09:04 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-08-04 01:09:04 DEBUG Settings:109 - JDBC result set fetch size: null
2021-08-04 01:09:04 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-08-04 01:09:04 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-08-04 01:09:04 DEBUG Settings:113 - JPA compliance - query : 
2021-08-04 01:09:04 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-08-04 01:09:04 DEBUG Settings:115 - JPA compliance - lists : 
2021-08-04 01:09:04 DEBUG Settings:116 - JPA compliance - transactions : 
2021-08-04 01:09:04 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-08-04 01:09:04 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS\target\classes;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\annotations-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ant.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ha.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-ssi.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-storeconfig.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina-tribes.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\catalina.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\ecj-4.20.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\el-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper-el.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jasper.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jaspic-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\jsp-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\servlet-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-api.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-coyote.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-dbcp.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-cs.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-de.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-es.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-fr.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ja.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ko.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-pt-BR.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-ru.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-i18n-zh-CN.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jdbc.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-jni.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util-scan.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-util.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\tomcat-websocket.jar;C:\Users\Josue\Documents\apache-tomcat-9.0.50-windows-x64\apache-tomcat-9.0.50\lib\websocket-api.jar;C:\Users\Josue\.m2\repository\org\postgresql\postgresql\42.2.23\postgresql-42.2.23.jar;C:\Users\Josue\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Josue\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Josue\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Josue\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Josue\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Josue\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Josue\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Josue\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Josue\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Josue\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Josue\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Josue\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Josue\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Josue\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Josue\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Josue\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Josue\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Josue\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Josue\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Josue\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Josue\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Josue\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_291\jre\bin, sun.java.command=MainDriver, sun.cpu.endian=little, user.home=C:\Users\Josue, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_291\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_291\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_291\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_291\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_291-b10, user.name=Josue, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cmvenp6wbeuf.us-east-2.rds.amazonaws.com:5432/ers, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Josue\AppData\Local\Temp\, java.version=1.8.0_291, user.dir=C:\Users\Josue\Desktop\World-Hello\Java-workspace\P1ERS, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@e041f0c, java.library.path=C:\Program Files\Java\jdk1.8.0_291\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Users/Josue/Downloads/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files\Java\jdk1.8.0_291\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Josue\AppData\Local\Microsoft\WindowsApps;;C:\Users\Josue\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Josue\Downloads\sts-4.11.0.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.291-b10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=10, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_291\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-08-04 01:09:04 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-08-04 01:09:04 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-08-04 01:09:04 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-08-04 01:09:04 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-08-04 01:09:04 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-08-04 01:09:04 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-08-04 01:09:04 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-08-04 01:09:05 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-08-04 01:09:05 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-08-04 01:09:05 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-08-04 01:09:05 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-08-04 01:09:05 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-08-04 01:09:05 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-04 01:09:05 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-08-04 01:09:05 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-08-04 01:09:05 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a202ccb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22d1886d]
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Reimbursement] is safe
2021-08-04 01:09:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Reimbursement
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.UserRoles] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.UserRoles
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementType] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementType
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.ReimbursementStatus] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.ReimbursementStatus
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Users] is safe
2021-08-04 01:09:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Users
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.UserRoles.uList
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set role_FK=? where user_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where user_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set role_FK=null where role_FK=? and user_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set role_FK=null where role_FK=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementStatus.rStatus
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set status_fk=? where reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set status_fk=null where status_fk=? and reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set status_fk=null where status_fk=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.model.ReimbursementType.tType
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimb set type_fk=? where reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:693 -  Row update: update reimb set  where reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimb set type_fk=null where type_fk=? and reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimb set type_fk=null where type_fk=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Reimbursement
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3796 -  Version select: select reimb_id from reimb where reimb_id =?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.reimb_id, reimbursem_.amount as amount2_2_, reimbursem_.submited as submited3_2_, reimbursem_.description as descript4_2_, reimbursem_.author_fk as author_f6_2_, reimbursem_.resolver_fk as resolver7_2_, reimbursem_.status_fk as status_f8_2_, reimbursem_.type_fk as type_fk9_2_, reimbursem_.resolved as resolved5_2_ from reimb reimbursem_ where reimbursem_.reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimb (amount, submited, description, author_fk, resolver_fk, status_fk, type_fk, resolved, reimb_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Update 0: update reimb set amount=?, submited=?, description=?, author_fk=?, resolver_fk=?, status_fk=?, type_fk=?, resolved=? where reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimb where reimb_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2fb9dd]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@168cd36b]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ae7b6]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd6753]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ad3d8a]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [NONE]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ee69ad8]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6cf771]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d77850]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ed09e8]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60859f5a]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Reimbursement, querySpaceUid=<gen:0>, path=com.example.model.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=com.example.model.Reimbursement.rAuthor)
          - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.Reimbursement.rResolver)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:3>, path=com.example.model.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=com.example.model.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimb_id1_2_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.Reimbursement [READ]: select reimbursem0_.reimb_id as reimb_id1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.submited as submited3_2_0_, reimbursem0_.description as descript4_2_0_, reimbursem0_.author_fk as author_f6_2_0_, reimbursem0_.resolver_fk as resolver7_2_0_, reimbursem0_.status_fk as status_f8_2_0_, reimbursem0_.type_fk as type_fk9_2_0_, reimbursem0_.resolved as resolved5_2_0_ from reimb reimbursem0_ where reimbursem0_.reimb_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Reimbursement: select reimbursem0_.reimb_id as reimb_id1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.submited as submited3_2_5_, reimbursem0_.description as descript4_2_5_, reimbursem0_.author_fk as author_f6_2_5_, reimbursem0_.resolver_fk as resolver7_2_5_, reimbursem0_.status_fk as status_f8_2_5_, reimbursem0_.type_fk as type_fk9_2_5_, reimbursem0_.resolved as resolved5_2_5_, users1_.user_id as user_id1_4_0_, users1_.email as email2_4_0_, users1_.first_name as first_na3_4_0_, users1_.last_name as last_nam4_4_0_, users1_.password as password5_4_0_, users1_.role_FK as role_FK7_4_0_, users1_.username as username6_4_0_, userroles2_.role_id as role_id1_3_1_, userroles2_.user_role as user_rol2_3_1_, users3_.user_id as user_id1_4_2_, users3_.email as email2_4_2_, users3_.first_name as first_na3_4_2_, users3_.last_name as last_nam4_4_2_, users3_.password as password5_4_2_, users3_.role_FK as role_FK7_4_2_, users3_.username as username6_4_2_, reimbursem4_.status_id as status_i1_0_3_, reimbursem4_.status as status2_0_3_, reimbursem5_.type_id as type_id1_1_4_, reimbursem5_.reim_type as reim_typ2_1_4_ from reimb reimbursem0_ left outer join users users1_ on reimbursem0_.author_fk=users1_.user_id left outer join user_roles userroles2_ on users1_.role_FK=userroles2_.role_id left outer join users users3_ on reimbursem0_.resolver_fk=users3_.user_id left outer join r_status reimbursem4_ on reimbursem0_.status_fk=reimbursem4_.status_id left outer join r_type reimbursem5_ on reimbursem0_.type_fk=reimbursem5_.type_id where reimbursem0_.reimb_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.UserRoles
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3796 -  Version select: select role_id from user_roles where role_id =?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select userroles_.role_id, userroles_.user_role as user_rol2_3_ from user_roles userroles_ where userroles_.role_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into user_roles (user_role, role_id) values (?, ?)
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Update 0: update user_roles set user_role=? where role_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from user_roles where role_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242a209e]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39c385d6]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1835d3ed]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [NONE]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa4d8cc]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : uList
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fde0371]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0a3d5]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRole
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.UserRoles)
    - Returns
       - EntityReturnImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:0>, path=com.example.model.UserRoles)
          - CollectionAttributeFetchImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:1>, path=com.example.model.UserRoles.uList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=com.example.model.UserRoles.uList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.UserRoles)
          - SQL table alias mapping - userroles0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_3_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.UserRoles [READ]: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.UserRoles: select userroles0_.role_id as role_id1_3_0_, userroles0_.user_role as user_rol2_3_0_ from user_roles userroles0_ where userroles0_.role_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementType
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3796 -  Version select: select type_id from r_type where type_id =?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.type_id, reimbursem_.reim_type as reim_typ2_1_ from r_type reimbursem_ where reimbursem_.type_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_type (reim_type, type_id) values (?, ?)
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Update 0: update r_type set reim_type=? where type_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_type where type_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c8e67b9]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49206065]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0bbc9f]
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [NONE]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1317b708]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursementType
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tType
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e51d054]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5f6e45]
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementType)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementType)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementType.tType)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementType.tType.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementType)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {type_id1_1_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementType [READ]: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementType: select reimbursem0_.type_id as type_id1_1_0_, reimbursem0_.reim_type as reim_typ2_1_0_ from r_type reimbursem0_ where reimbursem0_.type_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.ReimbursementStatus
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3796 -  Version select: select status_id from r_status where status_id =?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select reimbursem_.status_id, reimbursem_.status as status2_0_ from r_status reimbursem_ where reimbursem_.status_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into r_status (status, status_id) values (?, ?)
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Update 0: update r_status set status=? where status_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from r_status where status_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@615e3f51]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@608bc8f8]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5412bfea]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [NONE]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a6a68e]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rStatus
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79316f3a]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381d7219]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.ReimbursementStatus)
    - Returns
       - EntityReturnImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:0>, path=com.example.model.ReimbursementStatus)
          - CollectionAttributeFetchImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:1>, path=com.example.model.ReimbursementStatus.rStatus)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:2>, path=com.example.model.ReimbursementStatus.rStatus.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.ReimbursementStatus)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {status_i1_0_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.ReimbursementStatus [READ]: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.ReimbursementStatus: select reimbursem0_.status_id as status_i1_0_0_, reimbursem0_.status as status2_0_0_ from r_status reimbursem0_ where reimbursem0_.status_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Users
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select users_.user_id, users_.email as email2_4_, users_.first_name as first_na3_4_, users_.last_name as last_nam4_4_, users_.password as password5_4_, users_.username as username6_4_ from users users_ where users_.user_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, role_FK, username, user_id) values (?, ?, ?, ?, ?, ?, ?)
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-08-04 01:09:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49fe3142]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c42416]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [NONE]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329a1f8d]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc29daa]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Users, querySpaceUid=<gen:0>, path=com.example.model.Users)
          - EntityAttributeFetchImpl(entity=com.example.model.UserRoles, querySpaceUid=<gen:1>, path=com.example.model.Users.userRoles)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

2021-08-04 01:09:06 DEBUG EntityLoader:137 - Static select for entity com.example.model.Users [READ]: select users0_.user_id as user_id1_4_0_, users0_.email as email2_4_0_, users0_.first_name as first_na3_4_0_, users0_.last_name as last_nam4_4_0_, users0_.password as password5_4_0_, users0_.role_FK as role_FK7_4_0_, users0_.username as username6_4_0_ from users users0_ where users0_.user_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-04 01:09:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Users: select users0_.user_id as user_id1_4_1_, users0_.email as email2_4_1_, users0_.first_name as first_na3_4_1_, users0_.last_name as last_nam4_4_1_, users0_.password as password5_4_1_, users0_.role_FK as role_FK7_4_1_, users0_.username as username6_4_1_, userroles1_.role_id as role_id1_3_0_, userroles1_.user_role as user_rol2_3_0_ from users users0_ left outer join user_roles userroles1_ on users0_.role_FK=userroles1_.role_id where users0_.user_id=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bbf9e07]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff6efdc]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : userRoles
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : userRoles
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.UserRoles.uList)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.UserRoles.uList, querySpaceUid=<gen:0>, path=[com.example.model.UserRoles.uList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Users, querySpaceUid=<gen:1>, path=[com.example.model.UserRoles.uList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.UserRoles.uList)
          - SQL table alias mapping - ulist0_
          - alias suffix - 0_
          - suffixed key columns - {role_FK7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Users)
                - SQL table alias mapping - ulist0_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_4_1_}

2021-08-04 01:09:06 DEBUG CollectionLoader:83 - Static select for collection com.example.model.UserRoles.uList: select ulist0_.role_FK as role_FK7_4_0_, ulist0_.user_id as user_id1_4_0_, ulist0_.user_id as user_id1_4_1_, ulist0_.email as email2_4_1_, ulist0_.first_name as first_na3_4_1_, ulist0_.last_name as last_nam4_4_1_, ulist0_.password as password5_4_1_, ulist0_.role_FK as role_FK7_4_1_, ulist0_.username as username6_4_1_ from users ulist0_ where ulist0_.role_FK=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d5d5621]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13275d8]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@574cd322]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c2e0a6]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119c745c]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementStatus.rStatus)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementStatus.rStatus, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementStatus.rStatus])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementType, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementStatus.rStatus].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementStatus.rStatus)
          - SQL table alias mapping - rstatus0_
          - alias suffix - 0_
          - suffixed key columns - {status_f8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - rstatus0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-04 01:09:06 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementStatus.rStatus: select rstatus0_.status_fk as status_f8_2_0_, rstatus0_.reimb_id as reimb_id1_2_0_, rstatus0_.reimb_id as reimb_id1_2_1_, rstatus0_.amount as amount2_2_1_, rstatus0_.submited as submited3_2_1_, rstatus0_.description as descript4_2_1_, rstatus0_.author_fk as author_f6_2_1_, rstatus0_.resolver_fk as resolver7_2_1_, rstatus0_.status_fk as status_f8_2_1_, rstatus0_.type_fk as type_fk9_2_1_, rstatus0_.resolved as resolved5_2_1_ from reimb rstatus0_ where rstatus0_.status_fk=?
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a7ad6e5]
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1ed14b]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : createDate
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : des
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rAuthor
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475646d4]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : rResolver
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0f53fc]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-08-04 01:09:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db972d2]
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2021-08-04 01:09:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : updateDate
2021-08-04 01:09:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-08-04 01:09:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-08-04 01:09:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.model.ReimbursementType.tType)
    - Returns
       - CollectionReturnImpl(collection=com.example.model.ReimbursementType.tType, querySpaceUid=<gen:0>, path=[com.example.model.ReimbursementType.tType])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.model.Reimbursement, querySpaceUid=<gen:1>, path=[com.example.model.ReimbursementType.tType].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:2>, path=[com.example.model.ReimbursementType.tType].<elements>.rAuthor)
             - EntityAttributeFetchImpl(entity=com.example.model.Users, querySpaceUid=<gen:3>, path=[com.example.model.ReimbursementType.tType].<elements>.rResolver)
             - EntityAttributeFetchImpl(entity=com.example.model.ReimbursementStatus, querySpaceUid=<gen:4>, path=[com.example.model.ReimbursementType.tType].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.model.ReimbursementType.tType)
          - SQL table alias mapping - ttype0_
          - alias suffix - 0_
          - suffixed key columns - {type_fk9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimb_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.model.Reimbursement)
                - SQL table alias mapping - ttype0_
                - alias suffix - 1_
                - suffixed key columns - {reimb_id1_2_1_}

2021-08-04 01:09:06 DEBUG CollectionLoader:83 - Static select for collection com.example.model.ReimbursementType.tType: select ttype0_.type_fk as type_fk9_2_0_, ttype0_.reimb_id as reimb_id1_2_0_, ttype0_.reimb_id as reimb_id1_2_1_, ttype0_.amount as amount2_2_1_, ttype0_.submited as submited3_2_1_, ttype0_.description as descript4_2_1_, ttype0_.author_fk as author_f6_2_1_, ttype0_.resolver_fk as resolver7_2_1_, ttype0_.status_fk as status_f8_2_1_, ttype0_.type_fk as type_fk9_2_1_, ttype0_.resolved as resolved5_2_1_ from reimb ttype0_ where ttype0_.type_fk=?
2021-08-04 01:09:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@65a48602] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-08-04 01:09:06 DEBUG Table:516 - No alter strings for table : r_status
2021-08-04 01:09:06 DEBUG Table:516 - No alter strings for table : r_type
2021-08-04 01:09:06 DEBUG Table:516 - No alter strings for table : reimb
2021-08-04 01:09:06 DEBUG Table:516 - No alter strings for table : user_roles
2021-08-04 01:09:06 DEBUG Table:516 - No alter strings for table : users
2021-08-04 01:09:07 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-08-04 01:09:07 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-08-04 01:09:07 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-04 01:09:07 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-04 01:09:07 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-08-04 01:09:07 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-08-04 01:09:07 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@292158f8
2021-08-04 01:09:07 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 804c5944-ccb3-4945-bbd1-8510fcaf8986 (<unnamed>)
2021-08-04 01:09:07 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-08-04 01:09:07 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-08-04 01:09:07 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@73844119
2021-08-04 01:09:07 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.model.Users where username=:username
2021-08-04 01:09:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-04 01:09:07 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-08-04 01:09:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-08-04 01:09:08 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Users (<no alias>) -> users0_
2021-08-04 01:09:08 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-08-04 01:09:08 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@4efc180e
2021-08-04 01:09:08 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> users0_.username
2021-08-04 01:09:08 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-08-04 01:09:08 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.username {synthetic-alias} username ) ? ) ) )
2021-08-04 01:09:08 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-08-04 01:09:08 DEBUG JoinProcessor:192 - Using FROM fragment [users users0_]
2021-08-04 01:09:08 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-08-04 01:09:08 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.user_id as user_id1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.model.Users,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@4efc180e}

2021-08-04 01:09:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-04 01:09:08 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.model.Users where username=:username
2021-08-04 01:09:08 DEBUG QueryTranslatorImpl:255 - SQL: select users0_.user_id as user_id1_4_, users0_.email as email2_4_, users0_.first_name as first_na3_4_, users0_.last_name as last_nam4_4_, users0_.password as password5_4_, users0_.role_FK as role_FK7_4_, users0_.username as username6_4_ from users users0_ where users0_.username=?
2021-08-04 01:09:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-08-04 01:09:08 DEBUG SQL:94 - 
    select
        users0_.user_id as user_id1_4_,
        users0_.email as email2_4_,
        users0_.first_name as first_na3_4_,
        users0_.last_name as last_nam4_4_,
        users0_.password as password5_4_,
        users0_.role_FK as role_FK7_4_,
        users0_.username as username6_4_ 
    from
        users users0_ 
    where
        users0_.username=?
2021-08-04 01:09:08 DEBUG Loader:384 - Result set row: 0
2021-08-04 01:09:08 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Users#15]
2021-08-04 01:09:08 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Users#15]
2021-08-04 01:09:08 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Users#15]
2021-08-04 01:09:08 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-08-04 01:09:08 DEBUG SessionImpl:1114 - Initializing proxy: [com.example.model.UserRoles#2]
2021-08-04 01:09:08 DEBUG SQL:94 - 
    select
        userroles0_.role_id as role_id1_3_0_,
        userroles0_.user_role as user_rol2_3_0_ 
    from
        user_roles userroles0_ 
    where
        userroles0_.role_id=?
2021-08-04 01:09:08 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-08-04 01:09:08 DEBUG EntityReferenceInitializerImpl:126 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-08-04 01:09:08 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.UserRoles#2]
2021-08-04 01:09:08 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.UserRoles#2]
2021-08-04 01:09:08 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-08-04 01:09:08 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.example.model.UserRoles#2
2021-08-04 01:09:08 INFO  Logging:47 - User was logged in
2021-08-04 01:09:57 INFO  Logging:47 - User was logged in
